swagger: "2.0"
info:
  description: >-
    Styra DAS is entirely API-driven.


    Access to the APIs requires authentication that should be provided as an Authorization HTTP header including a Styra DAS-issued token:


    `Authorization: Bearer <YOURTOKENHERE>`


    To request a token you need to have an Styra account, and create a token via the API Tokens menu.
  title: Styra API
  termsOfService: https://doc-policies.s3-us-west-2.amazonaws.com/terms.html
  contact:
    email: support@styra.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 2.0.0
paths:
  "/openapi/deprecated/{spec}/{version}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - openapi
      summary: Returns a deprecated version
      operationId: OpenAPIDeprecated
      parameters:
        - pattern: v.*
          type: string
          description: OpenAPI Spec version
          name: spec
          in: path
          required: true
        - pattern: .*
          type: string
          description: API version
          name: version
          in: path
          required: true
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      security:
        - basicAuth: []
  /openapi/v2:
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - openapi
      summary: Swagger v2 Specification
      operationId: OpenAPIv2
      responses:
        "200":
          description: OK
      security:
        - basicAuth: []
  /openapi/v3:
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - openapi
      summary: OpenAPI v3 Specification
      operationId: OpenAPIv3
      responses:
        "200":
          description: OK
      security:
        - basicAuth: []
  /v1/activity:
    post:
      description: At most 256 entries returned per request. If only start_time or
        end_time is provided by the caller then the request defaults to 1 hour
        range
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - activity
      summary: Retrieve activity log
      operationId: HandleActivity
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/activity.v1.ActivityPostRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/activity.v1.ActivityPostResponse"
        "400":
          description: Invalid Parameter
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/agents/{kind}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - agents
      summary: Get current agent statuses
      operationId: GetAgentStatuses
      parameters:
        - type: string
          description: agent kind such as "agents", "datasources", "slps", "exporters"
          name: kind
          in: path
          required: true
        - type: string
          description: return only statuses for one or more system ID
          name: system
          in: query
        - type: string
          description: return only statuses for one or more agent ID
          name: id
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/status.v1.StatusGetResponse"
      security:
        - basicAuth: []
  "/v1/agents/{kind}/status":
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - agents
      summary: Post agent status
      operationId: PostAgentStatus
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/status.v1.AgentStatus"
        - type: string
          description: agent kind such as "agents", "datasources", "slps", "exporters"
          name: kind
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/status.v1.StatusPostResponse"
      security:
        - basicAuth: []
  "/v1/agents/{kind}/{id}":
    delete:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - agents
      summary: Delete agent information
      operationId: DeleteAgentInfo
      parameters:
        - type: string
          description: agent kind such as "agents", "datasources", "slps", "exporters"
          name: kind
          in: path
          required: true
        - pattern: .*
          type: string
          description: agent id
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/status.v1.DeleteAgentResponse"
      security:
        - basicAuth: []
  "/v1/agents/{kind}/{id}/status":
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - agents
      summary: Update agent status
      operationId: UpdateAgentStatus
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/status.v1.AgentStatus"
        - type: string
          description: agent kind such as "agents", "datasources", "slps", "exporters"
          name: kind
          in: path
          required: true
        - pattern: .*
          type: string
          description: agent id
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/status.v1.StatusPostResponse"
      security:
        - basicAuth: []
  /v1/authz/evaluation:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - authz
      summary: Evaluate a list of permissions
      operationId: CheckPermissions
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/authz.v1.CheckPermissionInput"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/authz.v1.CheckPermissionsPostResponse"
      security:
        - basicAuth: []
  /v1/authz/rolebindings:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - authz
      summary: List all role bindings for all resources of all resource types
      operationId: ListAllRoleBindings
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/authz.v1.RoleBindingsListAllResponse"
      security:
        - basicAuth: []
  "/v1/authz/rolebindings/{resourcetype}/{resource}":
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - authz
      summary: List role bindings
      operationId: ListRoleBindings.v1
      parameters:
        - pattern: .*
          type: string
          description: resource type
          name: resourcetype
          in: path
          required: true
        - pattern: .*
          type: string
          description: resource id
          name: resource
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/authz.v1.RoleBindingsListResponse"
      security:
        - basicAuth: []
  "/v1/authz/rolebindings/{resourcetype}/{resource}/{rolebinding}":
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - authz
      summary: Get a role binding
      operationId: GetRoleBinding.v1
      parameters:
        - pattern: .*
          type: string
          description: resource type
          name: resourcetype
          in: path
          required: true
        - pattern: .*
          type: string
          description: resource id
          name: resource
          in: path
          required: true
        - pattern: .*
          type: string
          description: role binding id
          name: rolebinding
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/authz.v1.RoleBindingsGetResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - authz
      summary: Update a role binding
      operationId: UpdateRoleBinding
      parameters:
        - pattern: .*
          type: string
          description: resource type
          name: resourcetype
          in: path
          required: true
        - pattern: .*
          type: string
          description: resource id
          name: resource
          in: path
          required: true
        - pattern: .*
          type: string
          description: role binding id
          name: rolebinding
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/authz.v1.RoleBindingsPutRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/authz.v1.RoleBindingsPutResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    delete:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - authz
      summary: Delete a resource role binding
      operationId: DeleteRoleBinding.v1
      parameters:
        - pattern: .*
          type: string
          description: resource type
          name: resourcetype
          in: path
          required: true
        - pattern: .*
          type: string
          description: resource id
          name: resource
          in: path
          required: true
        - pattern: .*
          type: string
          description: role binding id
          name: rolebinding
          in: path
          required: true
        - type: string
          description: if set to 'false', only deletes the role binding configuration and
            does not delete associated objects
          name: recursive
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/authz.v1.RoleBindingsDeleteResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/authz/roles:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - authz
      summary: List Styra-defined roles
      operationId: ListRoles.v1
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/authz.v1.RolesListResponse"
      security:
        - basicAuth: []
  /v1/bundles:
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
        - application/gzip
      tags:
        - bundles
      summary: Get a policy bundle
      operationId: GetPolicyBundle1
      parameters:
        - type: string
          description: policy name
          name: policy
          in: query
        - type: string
          description: path to partial evaluation
          name: eval_path
          in: query
        - type: string
          description: etag
          name: If-None-Match
          in: header
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              type: integer
        "304":
          description: Not Modified
      security:
        - basicAuth: []
  "/v1/bundles/{policy}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
        - application/gzip
      tags:
        - bundles
      summary: Get a policy bundle
      operationId: GetPolicyBundle2
      parameters:
        - pattern: .*
          type: string
          description: policy name
          name: policy
          in: path
          required: true
        - type: string
          description: path to partial evaluation
          name: eval_path
          in: query
        - type: string
          description: etag
          name: If-None-Match
          in: header
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              type: integer
        "304":
          description: Not Modified
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/data:
    get:
      description: Data (whether the result of evaluating policy or the data gathered
        by datasources) is arranged into a tree. List the locations within the
        tree that data exists.
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - data
      summary: List data
      operationId: ListData
      parameters:
        - type: string
          description: Rego query to be executed for the documents
          name: rego
          in: query
        - type: string
          description: Json Path expression to extract portions of documents
          name: jsonpath
          in: query
        - type: boolean
          default: false
          description: Download data as data.json file
          name: download
          in: query
        - type: string
          description: >-
            Returns '413 Payload Too Large' response if the body size is greater
            than given limit. 

            The units KB, MB and etc can be used.

            Example: 10 MB; 28 kilobytes; 2000
          name: limit
          in: query
        - type: string
          description: The server will return the requested resource, with a 200 status,
            only if it doesn't have an ETag matching the given ones. See
            <https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match>
            documentation.
          name: If-None-Match
          in: header
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/data.v1.DataResponse"
          headers:
            Etag:
              type: string
              description: The ETag (or entity tag) HTTP response header is an identifier for
                a specific version of a resource. See
                <https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag>
                documentation.
        "304":
          description: Not Modified
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
        "413":
          description: Request Entity Too Large
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    post:
      consumes:
        - application/json
        - text/plain
      produces:
        - application/json
      tags:
        - data
      summary: Show all data
      operationId: ShowAllData
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/data.v1.DataRequest"
        - type: string
          description: The server will return the requested resource, with a 200 status,
            only if it doesn't have an ETag matching the given ones. See
            <https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match>
            documentation.
          name: If-None-Match
          in: header
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/data.v1.DataResponse"
          headers:
            Etag:
              type: string
              description: The ETag (or entity tag) HTTP response header is an identifier for
                a specific version of a resource. See
                <https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag>
                documentation.
        "304":
          description: Not Modified
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    head:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - data
      summary: Check size of data
      operationId: HeadListData
      parameters:
        - type: string
          description: Rego query to be executed for the documents
          name: rego
          in: query
        - type: string
          description: Json Path expression to extract portions of documents
          name: jsonpath
          in: query
        - type: string
          description: The server will return the requested resource, with a 200 status,
            only if it doesn't have an ETag matching the given ones. See
            <https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match>
            documentation.
          name: If-None-Match
          in: header
      responses:
        "200":
          description: OK
          headers:
            Etag:
              type: string
              description: The ETag (or entity tag) HTTP response header is an identifier for
                a specific version of a resource. See
                <https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag>
                documentation.
        "304":
          description: Not Modified
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/data/{name}":
    get:
      description: Show data at the given `name`. The `name` must be an extension of
        one of the locations of data as returned by `GET v1/data`
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - data
      summary: Get data
      operationId: GetData
      parameters:
        - pattern: .*
          type: string
          description: data name
          name: name
          in: path
          required: true
        - type: string
          description: Rego query to be executed for the documents
          name: rego
          in: query
        - type: string
          description: Json Path expression to extract portions of documents
          name: jsonpath
          in: query
        - type: boolean
          default: false
          description: Download data as <name>.json file
          name: download
          in: query
        - type: string
          description: >-
            Returns '413 Payload Too Large' response if the body size is greater
            than given limit. 

            The units KB, MB and etc can be used.

            Example: 10 MB; 28 kilobytes; 2000
          name: limit
          in: query
        - type: string
          description: The server will return the requested resource, with a 200 status,
            only if it doesn't have an ETag matching the given ones. See
            <https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match>
            documentation.
          name: If-None-Match
          in: header
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/data.v1.DataResponse"
          headers:
            Etag:
              type: string
              description: The ETag (or entity tag) HTTP response header is an identifier for
                a specific version of a resource. See
                <https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag>
                documentation.
        "304":
          description: Not Modified
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
        "413":
          description: Request Entity Too Large
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    put:
      description: Set the data for the datasource registered at `<name>` to an
        arbitrary JSON document. This data can be read by doing `GET
        v1/data/<path>`
      consumes:
        - application/json
        - application/octet-stream
        - application/vnd.styra.push+json
      produces:
        - application/json
      tags:
        - data
      summary: Publish data
      operationId: PutData
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/meta.v1.RequestObject"
        - pattern: .*
          type: string
          description: data name
          name: name
          in: path
          required: true
        - type: string
          description: etag
          name: If-Match
          in: header
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/data.v1.DataPutResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    post:
      description: Show data at the given `name`. The `name` must be an extension of
        one of the locations of data as returned by `GET v1/data`.
      consumes:
        - application/json
        - text/plain
      produces:
        - application/json
      tags:
        - data
      summary: Show data
      operationId: ShowData
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/data.v1.DataRequest"
        - pattern: .*
          type: string
          description: data name
          name: name
          in: path
          required: true
        - type: string
          description: The server will return the requested resource, with a 200 status,
            only if it doesn't have an ETag matching the given ones. See
            <https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match>
            documentation.
          name: If-None-Match
          in: header
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/data.v1.DataResponse"
          headers:
            Etag:
              type: string
              description: The ETag (or entity tag) HTTP response header is an identifier for
                a specific version of a resource. See
                <https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag>
                documentation.
        "304":
          description: Not Modified
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    head:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - data
      summary: Check the size of the data
      operationId: HeadGetData
      parameters:
        - pattern: .*
          type: string
          description: data name
          name: name
          in: path
          required: true
        - type: string
          description: Rego query to be executed for the documents
          name: rego
          in: query
        - type: string
          description: Json Path expression to extract portions of documents
          name: jsonpath
          in: query
        - type: string
          description: The server will return the requested resource, with a 200 status,
            only if it doesn't have an ETag matching the given ones. See
            <https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match>
            documentation.
          name: If-None-Match
          in: header
      responses:
        "200":
          description: OK
          headers:
            Etag:
              type: string
              description: The ETag (or entity tag) HTTP response header is an identifier for
                a specific version of a resource. See
                <https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag>
                documentation.
        "304":
          description: Not Modified
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    patch:
      description: Modify the data of the push datasource registered at `<path>` by
        applying a JSON patch to the JSON document. The content type for the
        patch is `application/json-patch+json`. The operation returns the
        modified data.
      consumes:
        - application/json-patch+json
        - application/vnd.styra.patch+json
      produces:
        - application/json
      tags:
        - data
      summary: Patch data
      operationId: PatchData
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/meta.v1.RequestObject"
        - pattern: .*
          type: string
          description: data name
          name: name
          in: path
          required: true
        - type: string
          description: etag
          name: If-Match
          in: header
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/data.v1.DataPatchResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/datasources:
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - datasources
      summary: List data sources
      operationId: ListDatasources
      parameters:
        - type: string
          description: Filter data source by system ID
          name: system
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/datasources.v1.DatasourcesListResponse"
      security:
        - basicAuth: []
  "/v1/datasources/{datasource}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - datasources
      summary: Get a data source
      operationId: GetDatasource
      parameters:
        - pattern: .*
          type: string
          description: Data source ID
          name: datasource
          in: path
          required: true
        - type: boolean
          description: Execute data source
          name: execute
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/datasources.v1.DatasourcesGetResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    put:
      produces:
        - application/json
      tags:
        - datasources
      summary: Upsert a data source
      operationId: UpsertDatasource
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/datasources.v1.DatasourcesPutRequest"
        - pattern: .*
          type: string
          description: Data source ID
          name: datasource
          in: path
          required: true
        - type: string
          description: The server will return the requested resource, with a 200 status,
            only if it doesn't have an ETag matching the given ones. See
            <https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match>
            documentation.
          name: If-None-Match
          in: header
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/datasources.v1.DatasourcesPutResponse"
          headers:
            Etag:
              type: string
              description: The ETag (or entity tag) HTTP response header is an identifier for
                a specific version of a resource. See
                <https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag>
                documentation.
        "304":
          description: Not Modified
      security:
        - basicAuth: []
    post:
      produces:
        - application/json
      tags:
        - datasources
      summary: Execute a data source
      operationId: ExecuteDatasource
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/datasources.v1.DatasourcesPutRequest"
        - pattern: .*
          type: string
          description: Data source ID
          name: datasource
          in: path
          required: true
        - type: boolean
          description: Execute data source
          name: execute
          in: query
        - type: boolean
          description: Preview data source
          name: preview
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/datasources.v1.DatasourcesPostResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    delete:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - datasources
      summary: Delete a data source
      operationId: DeleteDatasource
      parameters:
        - pattern: .*
          type: string
          description: Data source ID
          name: datasource
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/datasources.v1.DatasourcesDeleteResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/decisions:
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - decisions
      summary: Search decision logs
      operationId: SearchDecisionLogsGet
      parameters:
        - type: string
          description: continue from cursor position of previous query
          name: cursor
          in: query
        - type: string
          description: minimum decision time
          name: start_time
          in: query
        - type: string
          description: maximum decision time
          name: end_time
          in: query
        - type: string
          description: search query
          name: search
          in: query
        - type: string
          description: system ID
          name: system
          in: query
        - type: string
          description: stack ID
          name: stack
          in: query
        - type: integer
          description: maximum number of decisions to return
          name: limit
          in: query
        - type: string
          description: comma-separated list of ALL, UNKNOWN, ADVICE, ALLOWED, DENIED, ERROR
          name: result_kind
          in: query
        - type: string
          description: ASC, DESC (default)
          name: order
          in: query
        - type: string
          description: client time zone offset e.g. -07:00, +3:00, Z. Local time
            expressions in query are adjusted with this offset
          name: default_timezone
          in: query
        - type: boolean
          description: return only essential decision fields
          name: compact
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/analysis.v1.DecisionsResponse"
      security:
        - basicAuth: []
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - decisions
      summary: Search decision logs
      operationId: SearchDecisionLogsPost
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/analysis.v1.DecisionsGetRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/analysis.v1.DecisionsResponse"
      security:
        - basicAuth: []
  "/v1/decisions/{cursor}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - decisions
      summary: Get a single decision
      operationId: GetDecision
      parameters:
        - type: string
          description: decision cursor value
          name: cursor
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/analysis.v1.DecisionResponse"
      security:
        - basicAuth: []
  /v1/identity-providers:
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - identity-providers
      summary: List providers
      operationId: ListProviders
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/identity-providers.v1.ProvidersListResponse"
      security:
        - basicAuth: []
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - identity-providers
      summary: Create provider
      operationId: CreateProvider
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/identity-providers.v1.ProvidersPostRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/identity-providers.v1.ProvidersPostResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/identity-providers/{providerId}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - identity-providers
      summary: Get provider
      operationId: GetProvider
      parameters:
        - pattern: .+
          type: string
          description: provider ID
          name: providerId
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/identity-providers.v1.ProvidersGetResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - identity-providers
      summary: Create or update provider
      operationId: UpdateProvider
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/identity-providers.v1.ProvidersPutRequest"
        - pattern: .+
          type: string
          description: provider ID
          name: providerId
          in: path
          required: true
        - type: string
          description: if set to '*' then creates a new provider with type-specific
            related objects
          name: If-None-Match
          in: header
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/identity-providers.v1.ProvidersPutResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    delete:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - identity-providers
      summary: Delete provider
      operationId: DeleteProvider
      parameters:
        - pattern: .+
          type: string
          description: provider ID
          name: providerId
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/identity-providers.v1.ProvidersDeleteResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/invitations:
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - invitations
      summary: List invitations
      operationId: ListInvitations
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/invitations.v1.InvitationsListResponse"
      security:
        - basicAuth: []
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - invitations
      summary: Invite user
      operationId: Create invitation
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/invitations.v1.InvitationsPostRequest"
        - type: boolean
          description: set to false to avoid sending an email
          name: email
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/invitations.v1.InvitationsPostResponse"
      security:
        - basicAuth: []
  "/v1/invitations/{id}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - invitations
      summary: Get invitation
      operationId: GetInvitation
      parameters:
        - pattern: .+
          type: string
          description: user ID
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/invitations.v1.InvitationsGetResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    delete:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - invitations
      summary: Revoke invitation
      operationId: RevokeInvitation
      parameters:
        - pattern: .+
          type: string
          description: user ID
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/invitations.v1.InvitationsDeleteResponse"
      security:
        - basicAuth: []
  "/v1/invitations/{token}":
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - invitations
      summary: Accept invitation
      operationId: AcceptInvitation
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/invitations.v1.InvitationsPutRequest"
        - pattern: .+
          type: string
          description: token from the invitation URL
          name: token
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/invitations.v1.InvitationsPutResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/logreplay:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - logreplay
      summary: Run log-replay
      operationId: RunLogReplay
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/logreplay.v1.ReplayRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/logreplay.v1.ReplayResult"
      security:
        - basicAuth: []
  /v1/logs:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - logs
      summary: Post decision logs
      operationId: PostDecisions
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/meta.v1.RequestObject"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/logs.v1.PostDecisionsResponse"
      security:
        - basicAuth: []
  "/v1/logs/{partition}":
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - logs
      summary: Post decision logs with partition
      operationId: PostDecisionsWithPartition
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/meta.v1.RequestObject"
        - pattern: .*
          type: string
          description: partition name. Currently not used
          name: partition
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/logs.v1.PostDecisionsResponse"
      security:
        - basicAuth: []
  "/v1/notifications-install/callback/{type}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - notifications
      summary: Handle callbacks from notification applications.
      operationId: RegisterNotificationTool
      parameters:
        - pattern: .*
          type: string
          description: notification type
          name: type
          in: path
          required: true
        - type: string
          description: authorization code from notification tool
          name: code
          in: query
        - type: string
          description: unique identification code
          name: state
          in: query
      responses:
        "307":
          description: OK
          schema:
            $ref: "#/definitions/notifications.v1.NotificationIntegrationResponse"
      security:
        - basicAuth: []
  "/v1/notifications-install/state/{type}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - notifications
      summary: Start installing the notification tool.
      operationId: InitiateNotificationInstall
      parameters:
        - pattern: .*
          type: string
          description: notification type
          name: type
          in: path
          required: true
        - type: string
          description: the landing page when OAuth is successfully done.
          name: redirect_url
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/notifications.v1.NotificationInstallNewStateResponse"
      security:
        - basicAuth: []
  "/v1/notifications/{type}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - notifications
      summary: Get the status of a notification tool.
      operationId: GetNotificationToolStatus
      parameters:
        - pattern: .*
          type: string
          description: notification type
          name: type
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/notifications.v1.NotificationToolStatusResponse"
      security:
        - basicAuth: []
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - notifications
      summary: Insert an access token for the notification tool.
      operationId: InsertNotificationToolToken
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/notifications.v1.NotificationToolTokenRequest"
        - pattern: .*
          type: string
          description: notification type
          name: type
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/notifications.v1.NotificationToolTokenResponse"
      security:
        - basicAuth: []
    delete:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - notifications
      summary: Uninstall a notification tool.
      operationId: UninstallNotificationToolStatus
      parameters:
        - pattern: .*
          type: string
          description: notification type
          name: type
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/notifications.v1.NotificationToolDeleteResponse"
      security:
        - basicAuth: []
  /v1/policies:
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - policies
      summary: List policies
      operationId: ListPolicies
      parameters:
        - type: string
          description: return rego metadata of specified type or all if no type provided
          name: metadata
          in: query
        - type: boolean
          description: return rego metadata for draft policies (when metadata flag is used)
          name: drafts
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/policies.v1.PoliciesListResponse"
      security:
        - basicAuth: []
    post:
      consumes:
        - application/gzip
      produces:
        - application/json
      tags:
        - policies
      summary: Bulk upload policies
      operationId: BulkUploadPolicies
      parameters:
        - description: Policy bundle
          name: body
          in: body
          required: true
          schema:
            type: string
            format: binary
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/policies.v1.PoliciesBulkUploadResponse"
      security:
        - basicAuth: []
  /v1/policies/playground:
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - policies
      summary: List playground policies
      operationId: ListPlaygroundPolicies
      parameters:
        - type: string
          description: return rego metadata of specified type or all if no type provided
          name: metadata
          in: query
        - type: boolean
          description: return rego metadata for draft policies (when metadata flag is used)
          name: drafts
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/policies.v1.PoliciesListResponse"
      security:
        - basicAuth: []
    post:
      consumes:
        - application/gzip
      produces:
        - application/json
      tags:
        - policies
      summary: Bulk upload playground policies
      operationId: BulkUploadPlaygroundPolicies
      parameters:
        - description: Policy bundle
          name: body
          in: body
          required: true
          schema:
            type: string
            format: binary
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/policies.v1.PoliciesBulkUploadResponse"
      security:
        - basicAuth: []
  "/v1/policies/systems/{system}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - policies
      summary: List system policies
      operationId: ListSystemPolicies
      parameters:
        - type: string
          description: system id
          name: system
          in: path
          required: true
        - type: string
          description: return rego metadata of specified type or all if no type provided
          name: metadata
          in: query
        - type: boolean
          description: return rego metadata for draft policies (when metadata flag is used)
          name: drafts
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/policies.v1.PoliciesListResponse"
      security:
        - basicAuth: []
    post:
      consumes:
        - application/gzip
      produces:
        - application/json
      tags:
        - policies
      summary: Bulk upload system policies
      operationId: BulkUploadSystemPolicies
      parameters:
        - type: string
          description: system id
          name: system
          in: path
          required: true
        - description: Policy bundle
          name: body
          in: body
          required: true
          schema:
            type: string
            format: binary
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/policies.v1.PoliciesBulkUploadResponse"
      security:
        - basicAuth: []
  "/v1/policies/{policy}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - policies
      summary: Get a policy
      operationId: GetPolicy
      parameters:
        - pattern: .+
          type: string
          description: policy name
          name: policy
          in: path
          required: true
        - type: boolean
          description: include dependencies
          name: dependencies
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/policies.v1.PolicyGetResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    put:
      consumes:
        - application/json
        - text/plain
      produces:
        - application/json
      tags:
        - policies
      summary: Update a policy
      operationId: UpdatePolicy
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/policies.v1.PoliciesPutRequest"
        - pattern: .+
          type: string
          description: policy name
          name: policy
          in: path
          required: true
        - type: string
          description: etag
          name: If-None-Match
          in: header
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/policies.v1.PolicyPutResponse"
      security:
        - basicAuth: []
    delete:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - policies
      summary: Delete a policy
      operationId: DeletePolicy
      parameters:
        - pattern: .+
          type: string
          description: policy name
          name: policy
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/policies.v1.PolicyDeleteResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/relay/clients:
    get:
      consumes:
        - "*/*"
      tags:
        - relay-server
      summary: Get clients
      operationId: GetClients
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/relay.protocol.ClientsResponse"
      security:
        - basicAuth: []
  "/v1/relay/register/{key}":
    get:
      consumes:
        - "*/*"
      tags:
        - relay-server
      summary: Register Client
      operationId: RegisterClient
      parameters:
        - pattern: "[a-zA-Z0-9-]*"
          type: string
          description: key to register the relay client with
          name: key
          in: path
          required: true
      responses:
        "200":
          description: OK
      security:
        - basicAuth: []
  "/v1/relay/{key}/{path}":
    get:
      consumes:
        - "*/*"
      produces:
        - "*/*"
      tags:
        - relay-server
      summary: Relays HTTP GET requests
      operationId: RelayGET
      parameters:
        - pattern: "[a-zA-Z0-9-]*"
          type: string
          description: identifies the relay client that should execute relayed request
          name: key
          in: path
          required: true
        - pattern: .*
          type: string
          description: path to be queried on the base-url that relay client is configured
            with
          name: path
          in: path
          required: true
      responses:
        "200":
          description: OK
      security:
        - basicAuth: []
    put:
      consumes:
        - "*/*"
      produces:
        - "*/*"
      tags:
        - relay-server
      summary: Relays HTTP PUT requests
      operationId: RelayPUT
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/meta.v1.RequestObject"
        - pattern: "[a-zA-Z0-9-]*"
          type: string
          description: identifies the relay client that should execute relayed request
          name: key
          in: path
          required: true
        - pattern: .*
          type: string
          description: path to be queried on the base-url that relay client is configured
            with
          name: path
          in: path
          required: true
      responses:
        "200":
          description: OK
      security:
        - basicAuth: []
    post:
      consumes:
        - "*/*"
      produces:
        - "*/*"
      tags:
        - relay-server
      summary: Relays HTTP POST requests
      operationId: RelayPOST
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/meta.v1.RequestObject"
        - pattern: "[a-zA-Z0-9-]*"
          type: string
          description: identifies the relay client that should execute relayed request
          name: key
          in: path
          required: true
        - pattern: .*
          type: string
          description: path to be queried on the base-url that relay client is configured
            with
          name: path
          in: path
          required: true
      responses:
        "200":
          description: OK
      security:
        - basicAuth: []
    delete:
      consumes:
        - "*/*"
      produces:
        - "*/*"
      tags:
        - relay-server
      summary: Relays HTTP DELETE requests
      operationId: RelayDELETE
      parameters:
        - pattern: "[a-zA-Z0-9-]*"
          type: string
          description: identifies the relay client that should execute relayed request
          name: key
          in: path
          required: true
        - pattern: .*
          type: string
          description: path to be queried on the base-url that relay client is configured
            with
          name: path
          in: path
          required: true
      responses:
        "200":
          description: OK
      security:
        - basicAuth: []
    head:
      consumes:
        - "*/*"
      produces:
        - "*/*"
      tags:
        - relay-server
      summary: Relays HTTP HEAD requests
      operationId: RelayHEAD
      parameters:
        - pattern: "[a-zA-Z0-9-]*"
          type: string
          description: identifies the relay client that should execute relayed request
          name: key
          in: path
          required: true
        - pattern: .*
          type: string
          description: path to be queried on the base-url that relay client is configured
            with
          name: path
          in: path
          required: true
      responses:
        "200":
          description: OK
      security:
        - basicAuth: []
    patch:
      consumes:
        - "*/*"
      produces:
        - "*/*"
      tags:
        - relay-server
      summary: Relays HTTP PATCH requests
      operationId: RelayPATCH
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/meta.v1.RequestObject"
        - pattern: "[a-zA-Z0-9-]*"
          type: string
          description: identifies the relay client that should execute relayed request
          name: key
          in: path
          required: true
        - pattern: .*
          type: string
          description: path to be queried on the base-url that relay client is configured
            with
          name: path
          in: path
          required: true
      responses:
        "200":
          description: OK
      security:
        - basicAuth: []
  /v1/secrets:
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - secrets
      summary: List secrets
      operationId: ListSecrets
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/secrets.v1.SecretsListResponse"
      security:
        - basicAuth: []
  "/v1/secrets/{secretId}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - secrets
      summary: Get secret
      operationId: GetSecret
      parameters:
        - pattern: .*
          type: string
          description: secret ID
          name: secretId
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/secrets.v1.SecretsGetResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - secrets
      summary: Create/update secret
      operationId: CreateUpdateSecret
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/secrets.v1.SecretsPutRequest"
        - pattern: .*
          type: string
          description: secret ID
          name: secretId
          in: path
          required: true
        - type: string
          description: if set to '*' then the request fill fail if the secret already exists
          name: If-None-Match
          in: header
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/secrets.v1.SecretsPutResponse"
        "409":
          description: Secret already exists
          schema:
            $ref: "#/definitions/secrets.v1.SecretsPutResponse"
      security:
        - basicAuth: []
    delete:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - secrets
      summary: Delete secret
      operationId: DeleteSecret
      parameters:
        - pattern: .*
          type: string
          description: secret ID
          name: secretId
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/secrets.v1.SecretsDeleteResponse"
      security:
        - basicAuth: []
  /v1/stacks:
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - stacks
      summary: List stacks
      operationId: ListStacks
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/stacks.v1.StacksListResponse"
      security:
        - basicAuth: []
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - stacks
      summary: Create a stack
      operationId: CreateStack
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/stacks.v1.StacksPostRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/stacks.v1.StacksPostResponse"
      security:
        - basicAuth: []
  /v1/stacks/source-control/verify-config:
    post:
      description: Verifies that the repository can be accessed with the provided
        credentials
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - stacks
      summary: Verify git access
      operationId: SourceControlVerifyConfigStack
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/git.v1.VerifyConfigRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/git.v1.VerifyConfigResponse"
        "400":
          description: Invalid Parameter
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/stacks/{id}/branch":
    get:
      description: Gets the list of files for the branch that the Styra DAS creates
        when modifying rego in the Styra DAS UI and pushing the changes to
        GitHub in a branch for review.
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - stacks
      summary: List files in Styra DAS-created branch.
      operationId: GetSourceControlFilesBranchStack
      parameters:
        - pattern: .*
          type: string
          description: stack id
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/git.v1.GetFilesResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    delete:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - stacks
      summary: Delete a user-owned branch
      operationId: DeleteUserBranchStack
      parameters:
        - pattern: .*
          type: string
          description: stack id
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/git.v1.DeleteBranchResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/stacks/{id}/commits":
    post:
      description: Commit files to source control associated with a stack
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - stacks
      summary: Commit files to stack source control
      operationId: CommitFilesToSourceControlStack
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/git.v1.CommitInput"
        - pattern: .*
          type: string
          description: stack id
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/git.v1.PostCommitResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/stacks/{id}/master":
    get:
      description: Gets the list of files in the currently chosen branch.
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - stacks
      summary: List files in current branch.
      operationId: GetSourceControlFilesMasterStack
      parameters:
        - pattern: .*
          type: string
          description: stack id
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/git.v1.GetFilesResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/stacks/{stack}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - stacks
      summary: Get a stack configuration
      operationId: GetStack
      parameters:
        - pattern: .*
          type: string
          description: stack id
          name: stack
          in: path
          required: true
        - type: boolean
          description: set to 'false' to omit datasources from the output
          name: datasources
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/stacks.v1.StacksGetResponse"
        "404":
          description: Not found
      security:
        - basicAuth: []
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - stacks
      summary: Create or update a stack
      operationId: UpdateStack
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/stacks.v1.StacksPutRequest"
        - pattern: .*
          type: string
          description: stack id
          name: stack
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/stacks.v1.StacksPutResponse"
      security:
        - basicAuth: []
    delete:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - stacks
      summary: Delete a stack
      operationId: DeleteStack
      parameters:
        - pattern: .*
          type: string
          description: stack id
          name: stack
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/stacks.v1.StacksDeleteResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/stacks/{stack}/validate/compliance":
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - stacks
      summary: Validate stack compliance
      operationId: ValidateStackCompliance
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/stacks.v1.StacksComplianceRequest"
        - pattern: .*
          type: string
          description: stack id
          name: stack
          in: path
          required: true
        - type: string
          description: set delay of asynchronous response HTTP(202); range [1s -
            compliance-api-timeout].
          name: asyncdelay
          in: query
        - type: string
          description: get asynchronous response; see HTTP(202) Location parameter
          name: asyncresponse
          in: query
        - type: string
          description: if set to 'latest', get most recent cached results for specified
            stack.
          name: interval
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/stacks.v1.StacksComplianceResponse"
        "202":
          description: Accepted
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/stacks/{stack}/validate/tests":
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - stacks
      summary: Validate stack unit tests
      operationId: ValidateStackTests
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/stacks.v1.StacksTestsRequest"
        - pattern: .*
          type: string
          description: stack id
          name: stack
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/stacks.v1.StacksTestsResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/status:
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - status
      summary: Get current OPA statuses
      operationId: GetStatuses
      parameters:
        - type: string
          description: return only statuses for one or more system ID
          name: system
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/status.v1.StatusGetResponse"
      security:
        - basicAuth: []
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - status
      summary: Update current OPA status
      operationId: UpdateStatus
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/status.v1.AgentStatus"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/status.v1.StatusPostResponse"
      security:
        - basicAuth: []
  "/v1/status/{partition}":
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - status
      summary: Update current OPA status
      operationId: UpdateStatusWithPartition
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/status.v1.AgentStatus"
        - pattern: .*
          type: string
          description: partition name. Currently not used
          name: partition
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/status.v1.StatusPostResponse"
      security:
        - basicAuth: []
  /v1/systems:
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - systems
      summary: List systems
      operationId: ListSystems
      parameters:
        - type: boolean
          description: if set to 'true', returns only minimal configuration information
            for each system
          name: compact
          in: query
        - type: boolean
          description: set to 'false' to omit policies from the output
          name: policies
          in: query
        - type: boolean
          description: set to 'false' to omit modules from the output
          name: modules
          in: query
        - type: boolean
          description: set to 'false' to omit datasources from the output
          name: datasources
          in: query
        - type: boolean
          description: set to 'false' to omit errors/warnings from the output
          name: errors
          in: query
        - type: boolean
          description: set to 'false' to omit authz info from the output
          name: authz
          in: query
        - type: boolean
          description: set to 'false' to omit metadata from the output
          name: metadata
          in: query
        - type: boolean
          description: set to 'true' to include policy rule counts in the output
          name: rule_counts
          in: query
        - type: string
          description: if set returns only systems of the specified type
          name: type
          in: query
        - type: string
          description: if set returns only systems with a name matching the given regex
          name: name
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/systems.v1.SystemsListResponse"
      security:
        - basicAuth: []
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - systems
      summary: Create a system
      operationId: CreateSystem
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/systems.v1.SystemsPostRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/systems.v1.SystemsPostResponse"
      security:
        - basicAuth: []
  /v1/systems/external-ids:
    post:
      description: Translate external identifiers to system identifiers
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - systems
      summary: Translate identifiers
      operationId: TranslateExternalIds
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/systems.v1.SystemsTranslateExternalIdsRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/systems.v1.SystemsTranslateExternalIdsResponse"
      security:
        - basicAuth: []
  /v1/systems/metrics:
    get:
      consumes:
        - "*/*"
      produces:
        - text/plain
      tags:
        - systems
      summary: Handle system metrics
      operationId: HandleSystemMetrics
      responses:
        "200":
          description: OK
      security:
        - basicAuth: []
  /v1/systems/source-control/verify-config:
    post:
      description: Verifies that the repository can be accessed with the provided
        credentials
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - systems
      summary: Verify git access
      operationId: SourceControlVerifyConfigSystem
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/git.v1.VerifyConfigRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/git.v1.VerifyConfigResponse"
        "400":
          description: Invalid Parameter
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/systems/{id}/branch":
    get:
      description: Gets the list of files for the branch that the Styra DAS creates
        when modifying rego in the Styra DAS UI and pushing the changes to
        GitHub in a branch for review.
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - systems
      summary: List files in Styra DAS-created branch.
      operationId: GetSourceControlFilesBranchSystem
      parameters:
        - pattern: .*
          type: string
          description: system id
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/git.v1.GetFilesResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    delete:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - systems
      summary: Delete a user-owned branch
      operationId: DeleteUserBranchSystem
      parameters:
        - pattern: .*
          type: string
          description: system id
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/git.v1.DeleteBranchResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/systems/{id}/commits":
    post:
      description: Commit files to source control associated with a system
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - systems
      summary: Commit files to system source control
      operationId: CommitFilesToSourceControlSystem
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/git.v1.CommitInput"
        - pattern: .*
          type: string
          description: system id
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/git.v1.PostCommitResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/systems/{id}/master":
    get:
      description: Gets the list of files in the currently chosen branch.
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - systems
      summary: List files in current branch.
      operationId: GetSourceControlFilesMasterSystem
      parameters:
        - pattern: .*
          type: string
          description: system id
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/git.v1.GetFilesResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/systems/{system}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - systems
      summary: Get a system
      operationId: GetSystem
      parameters:
        - pattern: .*
          type: string
          description: system ID
          name: system
          in: path
          required: true
        - type: boolean
          description: set to 'false' to omit errors/warnings from the output
          name: errors
          in: query
        - type: boolean
          description: set to 'false' to omit policies from the output
          name: policies
          in: query
        - type: boolean
          description: set to 'false' to omit modules from the output
          name: modules
          in: query
        - type: boolean
          description: set to 'false' to omit datasources from the output
          name: datasources
          in: query
        - type: boolean
          description: set to 'false' to omit matching_stacks from the output
          name: stacks
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/systems.v1.SystemsGetResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - systems
      summary: Create or update a system
      operationId: UpdateSystem
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/systems.v1.SystemsPutRequest"
        - pattern: .*
          type: string
          description: system ID
          name: system
          in: path
          required: true
        - type: string
          description: if set to '*' then creates a new system with type-specific related
            objects
          name: If-None-Match
          in: header
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/systems.v1.SystemsPutResponse"
      security:
        - basicAuth: []
    delete:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - systems
      summary: Delete a system
      operationId: DeleteSystem
      parameters:
        - pattern: .*
          type: string
          description: system ID
          name: system
          in: path
          required: true
        - type: string
          description: if set to 'false', only deletes the system configuration and does
            not delete associated objects
          name: recursive
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/systems.v1.SystemsDeleteResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/systems/{system}/agents":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - systems
      summary: Get system agents
      operationId: GetSystemAgents
      parameters:
        - pattern: .*
          type: string
          description: system ID
          name: system
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/systems.v1.SystemsGetAgentsResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/systems/{system}/assets/{assettype}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/x-yaml
        - application/gzip
        - application/json
      tags:
        - systems
      summary: Get system asset
      operationId: GetAsset
      parameters:
        - pattern: .*
          type: string
          description: system ID
          name: system
          in: path
          required: true
        - pattern: .*
          type: string
          description: asset type
          name: assettype
          in: path
          required: true
      responses:
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/systems/{system}/bundle-compile":
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - systems
      summary: Compile a system bundle
      operationId: UpdateSystemBundleCompile
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/systems.v1.SystemsPutBundleCompileRequest"
        - pattern: .*
          type: string
          description: system ID
          name: system
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/systems.v1.SystemsPutBundleCompileResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/systems/{system}/bundle-deploy":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - systems
      summary: Get a system bundle deployment and build status
      operationId: GetSystemBundleDeploy
      parameters:
        - pattern: .*
          type: string
          description: system ID
          name: system
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/systems.v1.SystemsGetBundleDeployResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - systems
      summary: Deploy a system bundle
      operationId: UpdateSystemBundleDeploy
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/systems.v1.SystemsPutBundleDeployRequest"
        - pattern: .*
          type: string
          description: system ID
          name: system
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/systems.v1.SystemsPutBundleDeployResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
        "409":
          description: Conflict
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/systems/{system}/bundles":
    get:
      description: List system bundles, starting from the newest towards the oldest
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - systems
      summary: List system bundles
      operationId: GetSystemBundles
      parameters:
        - type: boolean
          description: if set to 'true', returns only bundles deployed in the past
          name: past
          in: query
        - type: integer
          description: if set, the newest version to return
          name: version
          in: query
        - pattern: .*
          type: string
          description: system ID
          name: system
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/systems.v1.SystemsGetBundlesResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/systems/{system}/bundles/{bundle}/{version}/bundle":
    get:
      consumes:
        - "*/*"
      produces:
        - application/gzip
        - application/json
      tags:
        - systems
      summary: Get system bundle
      operationId: GetSystemBundle
      parameters:
        - pattern: .*
          type: string
          description: system ID
          name: system
          in: path
          required: true
        - pattern: .*
          type: string
          description: bundle ID
          name: bundle
          in: path
          required: true
        - type: integer
          description: "version #"
          name: version
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/systems.v1.SystemsGetBundleDetailsResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/systems/{system}/bundles/{bundle}/{version}/details":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - systems
      summary: Get system bundle details
      operationId: GetSystemBundleDetails
      parameters:
        - pattern: .*
          type: string
          description: system ID
          name: system
          in: path
          required: true
        - pattern: .*
          type: string
          description: bundle ID
          name: bundle
          in: path
          required: true
        - type: integer
          description: "version #"
          name: version
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/systems.v1.SystemsGetBundleDetailsResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/systems/{system}/default-policies":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - systems
      summary: Get default system policies
      operationId: GetDefaultPolicies
      parameters:
        - pattern: .*
          type: string
          description: system ID
          name: system
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/systems.v1.SystemsGetDefaultPoliciesResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/systems/{system}/default-policies/{path}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - systems
      summary: Get default system policy
      operationId: GetDefaultPolicy
      parameters:
        - pattern: .*
          type: string
          description: system ID
          name: system
          in: path
          required: true
        - pattern: .*
          type: string
          description: policy path
          name: path
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/systems.v1.SystemsGetDefaultPolicyResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/systems/{system}/discovery":
    get:
      consumes:
        - "*/*"
      produces:
        - application/gzip
      tags:
        - systems
      summary: Get the OPA discovery config for a system
      operationId: GetOPADiscoveryConfig
      parameters:
        - pattern: .*
          type: string
          description: system ID
          name: system
          in: path
          required: true
        - type: string
          description: etag
          name: If-None-Match
          in: header
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/systems.v1.SystemsGetResponse"
        "304":
          description: Not Modified
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/systems/{system}/instructions":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - systems
      summary: Get system install/uninstall instructions
      operationId: GetInstructions
      parameters:
        - pattern: .*
          type: string
          description: system ID
          name: system
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/systems.v1.SystemsGetInstructionsResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/systems/{system}/suggestions":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - systems
      summary: Get rule suggestions
      operationId: RuleSuggestions
      parameters:
        - pattern: .*
          type: string
          description: system ID
          name: system
          in: path
          required: true
        - type: boolean
          description: true to get only the stateful suggestions, false for stateless,
            omit for both
          name: stateful
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/systems.v1.SystemsSuggestedRulesResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
        "503":
          description: Not available, please retry later
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/systems/{system}/validate/compliance":
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - systems
      summary: Validate system compliance
      operationId: ValidateSystemCompliance
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/systems.v1.SystemsComplianceRequest"
        - pattern: .*
          type: string
          description: system ID
          name: system
          in: path
          required: true
        - type: string
          description: set delay of asynchronous response HTTP(202); range [1s -
            compliance-api-timeout].
          name: asyncdelay
          in: query
        - type: string
          description: get asynchronous response; see HTTP(202) Location parameter.
          name: asyncresponse
          in: query
        - type: string
          description: if set to 'latest', get most recent cached results for specified
            system.
          name: interval
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/systems.v1.SystemsComplianceResponse"
        "202":
          description: Accepted
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/systems/{system}/validate/tests":
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - systems
      summary: Validate system unit tests
      operationId: ValidateSystemTests
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/systems.v1.SystemsTestsRequest"
        - pattern: .*
          type: string
          description: system ID
          name: system
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/systems.v1.SystemsTestsResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/timeseries/advice:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - timeseries
      summary: Handle advice
      operationId: HandleAdvice
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/timeseries.v1.TimeSeriesPostRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/timeseries.v1.TimeSeriesPostResponse"
        "400":
          description: Invalid Parameter
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/timeseries/decision:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - timeseries
      summary: Handle decision
      operationId: HandleDecision
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/timeseries.v1.TimeSeriesPostRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/timeseries.v1.TimeSeriesPostResponse"
        "400":
          description: Invalid Parameter
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/timeseries/deny:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - timeseries
      summary: Handle deny
      operationId: HandleDeny
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/timeseries.v1.TimeSeriesPostRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/timeseries.v1.TimeSeriesPostResponse"
        "400":
          description: Invalid Parameter
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/timeseries/error:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - timeseries
      summary: Handle error
      operationId: HandleError
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/timeseries.v1.TimeSeriesPostRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/timeseries.v1.TimeSeriesPostResponse"
        "400":
          description: Invalid Parameter
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/timeseries/latency:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - timeseries
      summary: Handle latency
      operationId: HandleLatency
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/timeseries.v1.TimeSeriesPostRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/timeseries.v1.TimeSeriesPostResponse"
        "400":
          description: Invalid Parameter
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/timeseries/metrics:
    get:
      consumes:
        - "*/*"
      produces:
        - text/plain
      tags:
        - timeseries
      summary: Handle timeseries metrics
      operationId: HandleTimeseriesMetrics
      responses:
        "200":
          description: OK
      security:
        - basicAuth: []
  /v1/timeseries/unknown:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - timeseries
      summary: Handle unknown
      operationId: HandleUnknown
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/timeseries.v1.TimeSeriesPostRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/timeseries.v1.TimeSeriesPostResponse"
        "400":
          description: Invalid Parameter
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/timeseries/usage:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - timeseries
      summary: Handle usage
      operationId: HandleUsage
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/timeseries.v1.TimeSeriesUsagePostRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/timeseries.v1.TimeSeriesUsagePostResponse"
        "400":
          description: Invalid Parameter
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/timeseries/violation:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - timeseries
      summary: Handle violation
      operationId: HandleViolation
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/timeseries.v1.TimeSeriesPostRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/timeseries.v1.TimeSeriesPostResponse"
        "400":
          description: Invalid Parameter
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/tokens:
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - tokens
      summary: List tokens
      operationId: ListTokens
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/tokens.v1.TokensListResponse"
      security:
        - basicAuth: []
  "/v1/tokens/{tokenId}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - tokens
      summary: Get token
      operationId: GetToken
      parameters:
        - pattern: .+
          type: string
          description: token ID
          name: tokenId
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/tokens.v1.TokensGetResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    put:
      description: "If If-None-Match header is set to *, tries to create a token,
        otherwise will try to either update or create depending on whether an
        unexpired token with that ID already exists. Token creation errors with
        a 409 code if an unexpired one already exists, on success returns the
        token secret (valid for the TTL whose default value is ~10 years). Token
        updates return nothing unless `regenerate` is true, in which case it
        returns the new secret. WARNING: If allow_path_patterns is unset or an
        empty list, all paths are allowed."
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - tokens
      summary: Create or update a token
      operationId: CreateToken
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/tokens.v1.TokensPutRequest"
        - pattern: .+
          type: string
          description: token ID
          name: tokenId
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/tokens.v1.TokensPutResponse"
        "409":
          description: Token already exists
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    delete:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - tokens
      summary: Revoke token
      operationId: RevokeToken
      parameters:
        - pattern: .+
          type: string
          description: token ID
          name: tokenId
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/tokens.v1.TokensDeleteResponse"
      security:
        - basicAuth: []
  /v1/users:
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - users
      summary: List users
      operationId: ListUsers
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/users.v1.UsersListResponse"
      security:
        - basicAuth: []
  "/v1/users/{userId}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - users
      summary: Get user
      operationId: GetUser
      parameters:
        - pattern: .+
          type: string
          description: user ID
          name: userId
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/users.v1.UsersGetResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - users
      summary: Create/update user
      operationId: CreateUpdateUser
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/users.v1.UsersPutRequest"
        - pattern: .+
          type: string
          description: user ID
          name: userId
          in: path
          required: true
        - type: string
          description: if set to '*' then the request fill fail if the user already exists
          name: If-None-Match
          in: header
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/users.v1.UsersPutResponse"
        "409":
          description: User already exists
          schema:
            $ref: "#/definitions/users.v1.UsersPutResponse"
      security:
        - basicAuth: []
    delete:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - users
      summary: Delete user
      operationId: DeleteUser
      parameters:
        - pattern: .+
          type: string
          description: user ID
          name: userId
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/users.v1.UsersDeleteResponse"
      security:
        - basicAuth: []
  /v1/workspace:
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - workspace
      summary: Get workspace
      operationId: GetWorkspace
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/workspace.v1.WorkspaceGetResponse"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    put:
      description: Updates workspace configuration
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - workspace
      summary: Update workspace
      operationId: UpdateWorkspace
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/workspace.v1.WorkspacePutRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/workspace.v1.WorkspacePutResponse"
        "400":
          description: Invalid Parameter
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/workspace/kafka/verify-config:
    post:
      description: Verifies that the Kafka topic can be accessed with the provided
        credentials.
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - workspace
      summary: Kafka connectivity test
      operationId: KafkaVerifyConfig
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/workspace.v1.KafkaConfig"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/workspace.v1.KafkaVerifyResponse"
        "400":
          description: Invalid Parameter
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/workspace/regions/{storagesvc}":
    get:
      description: Get list of valid regions for S3 integration type
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - workspace
      summary: Get S3 regions list
      operationId: GetRegions
      parameters:
        - pattern: .*
          type: string
          description: storagesvc id
          name: storagesvc
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/workspace.v1.GetRegionResponse"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/workspace/s3-config:
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - workspace
      summary: Get S3 decision configuration
      operationId: GetS3Config
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/workspace.v1.S3ConfigGetResponse"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - workspace
      summary: Update S3 decision configuration
      operationId: UpdateS3Config
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/workspace.v1.S3ConfigPutRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/workspace.v1.WorkspacePutResponse"
        "400":
          description: Invalid Parameter
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/workspace/s3/verify-config:
    post:
      description: Verifies that the S3 bucket can be accessed with the provided
        credentials. Creates styra_test.json file
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - workspace
      summary: S3 connectivity test
      operationId: S3VerifyConfig
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/workspace.v1.S3Config"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/workspace.v1.S3VerifyResponse"
        "400":
          description: Invalid Parameter
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v1/workspace/source-control/verify-config:
    post:
      description: Verifies that the repository can be accessed with the provided
        credentials
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - workspace
      summary: Verify git access
      operationId: SourceControlVerifyConfigWorkspace
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/git.v1.VerifyConfigRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/git.v1.VerifyConfigResponse"
        "400":
          description: Invalid Parameter
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/workspace/{id}/branch":
    get:
      description: Gets the list of files for the branch that the Styra DAS creates
        when modifying rego in the Styra DAS UI and pushing the changes to
        GitHub in a branch for review.
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - workspace
      summary: List files in Styra DAS-created branch.
      operationId: GetSourceControlFilesBranchWorkspace
      parameters:
        - pattern: .*
          type: string
          description: workspace id
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/git.v1.GetFilesResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    delete:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - workspace
      summary: Delete a user-owned branch
      operationId: DeleteUserBranchWorkspace
      parameters:
        - pattern: .*
          type: string
          description: workspace id
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/git.v1.DeleteBranchResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/workspace/{id}/commits":
    post:
      description: Commit files to source control associated with a workspace
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - workspace
      summary: Commit files to workspace source control
      operationId: CommitFilesToSourceControlWorkspace
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/git.v1.CommitInput"
        - pattern: .*
          type: string
          description: workspace id
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/git.v1.PostCommitResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v1/workspace/{id}/master":
    get:
      description: Gets the list of files in the currently chosen branch.
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - workspace
      summary: List files in current branch.
      operationId: GetSourceControlFilesMasterWorkspace
      parameters:
        - pattern: .*
          type: string
          description: workspace id
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/git.v1.GetFilesResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v2/authz/migration/status:
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - authz
      summary: Update migration status
      operationId: UpdateMigrationStatus
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/authz.v2.RoleBindingsPutStatusRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/authz.v2.RoleBindingsPutStatusResponse"
      security:
        - basicAuth: []
  /v2/authz/reset/rolebindings:
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - authz
      summary: Reset rolebindings
      operationId: ResetRoleBindings
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/authz.v2.RoleBindingsPutResetRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/authz.v2.RoleBindingsPutResetResponse"
      security:
        - basicAuth: []
  /v2/authz/rolebindings:
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - authz
      summary: List role bindings
      operationId: ListRoleBindings.v2
      parameters:
        - type: string
          description: if set returns only rolebindings involving the specified resource
            kind (if supplied multiple times will return rolebindings that match
            any of the specified resource kinds)
          name: resource_kind
          in: query
        - type: string
          description: if set returns only rolebindings involving the specified resource
            id (if supplied multiple times will return rolebindings that match
            any of the specified resource ids)
          name: resource_id
          in: query
        - type: string
          description: if set returns only rolebindings involving the specified role id
            (if supplied multiple times will return rolebindings that match any
            of the specified role ids)
          name: role_id
          in: query
        - type: string
          description: if set returns only rolebindings involving the specified subject
            kind (if supplied multiple times will return rolebindings that match
            any of the specified subject kinds)
          name: subject_kind
          in: query
        - type: string
          description: if set returns only rolebindings involving the specified subject id
            (if supplied multiple times will return rolebindings that match any
            of the specified subject ids)
          name: subject_id
          in: query
        - type: boolean
          description: if set to 'true', returns only internal rolebindings
          name: internal
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/authz.v2.RoleBindingsListResponse"
      security:
        - basicAuth: []
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - authz
      summary: Create or update rolebinding
      operationId: CreateRoleBinding
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/authz.v2.RoleBindingsPostRequest"
        - type: string
          description: if set to '*', will not update existing rolebinding
          name: If-None-Match
          in: header
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/authz.v2.RoleBindingsPostResponse"
        "400":
          description: Invalid Parameter
          schema:
            $ref: "#/definitions/authz.v2.RoleBindingsPostResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
        "409":
          description: Conflict
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v2/authz/rolebindings/{id}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - authz
      summary: Get rolebinding
      operationId: GetRoleBinding.v2
      parameters:
        - pattern: .*
          type: string
          description: rolebinding ID
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/authz.v2.RoleBindingsGetResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    delete:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - authz
      summary: Delete rolebinding
      operationId: DeleteRoleBinding.v2
      parameters:
        - type: string
          description: if set to '*', will return success if not found
          name: If-Match
          in: header
        - pattern: .*
          type: string
          description: rolebinding ID
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/authz.v2.RoleBindingsDeleteResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  "/v2/authz/rolebindings/{id}/subjects":
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - authz
      summary: Merge rolebinding subjects
      operationId: MergeRoleBindingSubjects
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/authz.v2.RoleBindingsPutSubjectsRequest"
        - pattern: .*
          type: string
          description: rolebinding ID
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/authz.v2.RoleBindingsPutSubjectsResponse"
        "400":
          description: Invalid Parameter
          schema:
            $ref: "#/definitions/authz.v2.RoleBindingsPostResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - authz
      summary: Update rolebinding subjects
      operationId: UpdateRoleBindingSubjects
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/authz.v2.RoleBindingsPostSubjectsRequest"
        - pattern: .*
          type: string
          description: rolebinding ID
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/authz.v2.RoleBindingsPostSubjectsResponse"
        "400":
          description: Invalid Parameter
          schema:
            $ref: "#/definitions/authz.v2.RoleBindingsPostResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
    delete:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - authz
      summary: Delete rolebinding subjects
      operationId: DeleteRoleBindingSubjects
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/authz.v2.RoleBindingsDeleteSubjectsRequest"
        - pattern: .*
          type: string
          description: rolebinding ID
          name: id
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/authz.v2.RoleBindingsDeleteSubjectsResponse"
        "400":
          description: Invalid Parameter
          schema:
            $ref: "#/definitions/authz.v2.RoleBindingsPostResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/meta.v1.ErrorResponse"
      security:
        - basicAuth: []
  /v2/authz/roles:
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - authz
      summary: List roles
      operationId: ListRoles
      parameters:
        - type: string
          description: if set returns only roles applicable to specific resource kind
          name: resource_kind
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/authz.v2.RolesListResponse"
      security:
        - basicAuth: []
  /v2/policies:
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - policies
      summary: Get policies
      operationId: GetPolicies
      parameters:
        - type: string
          description: "only return policies in specified overlay type(s). Valid types:
            published, protected, review, draft, stash"
          name: type
          in: query
        - type: string
          description: context to use for context-aware overlay types (review, draft,
            stash). Usually the user ID. Empty/missing means return for all
            contexts
          name: context
          in: query
        - type: boolean
          description: return policy file layout. When combined with `namespace` implies
            `modules`
          name: files
          in: query
        - type: boolean
          description: return policy content (implies 'files')
          name: content
          in: query
        - type: boolean
          description: return policy files metadata (implies 'files')
          name: file-metadata
          in: query
        - type: boolean
          description: return policy file labels (implies 'files')
          name: labels
          in: query
        - type: string
          description: return only files that has one or more labels e.g.
            label=key1:value1&label=key2:value2 (implies 'files')
          name: label
          in: query
        - type: boolean
          description: return policy files revision (implies 'files')
          name: revisions
          in: query
        - type: boolean
          description: return policy namespace layout
          name: namespace
          in: query
        - type: boolean
          description: return modules of each policy package (implies 'namespace)
          name: modules
          in: query
        - type: boolean
          description: return rego payload metadata (implies `rules`)
          name: rego-metadata
          in: query
        - type: boolean
          description: return rego rules metadata in addition to package metadata (implies
            `rego-metadata`)
          name: rules
          in: query
        - type: string
          description: return rego metadata only of a given type(s) (implies
            `rego-metadata`)
          name: rego-metadata-type
          in: query
        - type: boolean
          description: return policy roots that have no policies according to other query
            parameters (default is on)
          name: empty-roots
          in: query
        - type: string
          description: return only modules for the given rego namespace prefix
          name: ns
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/policies.v2.PoliciesGetResponse"
        "304":
          description: Not Modified
      security:
        - basicAuth: []
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - policies
      summary: Create policies
      operationId: CreatePolicies
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/policies.v2.PoliciesPostRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/policies.v2.PoliciesPostResponse"
      security:
        - basicAuth: []
  "/v2/policies/{path}":
    get:
      consumes:
        - "*/*"
      produces:
        - application/json
      tags:
        - policies
      summary: Get policies at path
      operationId: GetPoliciesAtPath
      parameters:
        - pattern: .*
          type: string
          description: root path (can have wildcards)
          name: path
          in: path
          required: true
        - type: string
          description: "only return policies in specified overlay type(s). Valid types:
            published, protected, review, draft, stash"
          name: type
          in: query
        - type: string
          description: context to use for context-aware overlay types (review, draft,
            stash). Usually the user ID. Empty/missing means return for all
            contexts
          name: context
          in: query
        - type: boolean
          description: return policy file layout. When combined with `namespace` implies
            `modules`
          name: files
          in: query
        - type: boolean
          description: return policy content (implies 'files')
          name: content
          in: query
        - type: boolean
          description: return policy files metadata (implies 'files')
          name: file-metadata
          in: query
        - type: boolean
          description: return policy file labels (implies 'files')
          name: labels
          in: query
        - type: string
          description: return only files that has one or more labels e.g.
            label=key1:value1&label=key2:value2 (implies 'files')
          name: label
          in: query
        - type: boolean
          description: return policy files revision (implies 'files')
          name: revisions
          in: query
        - type: boolean
          description: return policy namespace layout
          name: namespace
          in: query
        - type: boolean
          description: return modules of each policy package (implies 'namespace)
          name: modules
          in: query
        - type: boolean
          description: return rego payload metadata (implies `rules`)
          name: rego-metadata
          in: query
        - type: boolean
          description: return rego rules metadata in addition to package metadata (implies
            `rego-metadata`)
          name: rules
          in: query
        - type: string
          description: return rego metadata only of a given type(s) (implies
            `rego-metadata`)
          name: rego-metadata-type
          in: query
        - type: boolean
          description: return policy roots that have no policies according to other query
            parameters (default is on)
          name: empty-roots
          in: query
        - type: string
          description: return only modules for the given rego namespace prefix
          name: ns
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/policies.v2.PoliciesGetResponse"
        "304":
          description: Not Modified
      security:
        - basicAuth: []
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - policies
      summary: Promote policies
      operationId: PromotePolicies
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/policies.v2.PoliciesPutRequest"
        - pattern: .*
          type: string
          description: base path
          name: path
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/policies.v2.PoliciesPutResponse"
      security:
        - basicAuth: []
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - policies
      summary: Create policies at path
      operationId: CreatePoliciesAtPath
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/policies.v2.PoliciesPostRequest"
        - pattern: .*
          type: string
          description: base path
          name: path
          in: path
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/policies.v2.PoliciesPostResponse"
      security:
        - basicAuth: []
definitions:
  .status:
    required:
      - reason
    properties:
      reason:
        type: string
  activity.v1.ActivityData:
    required:
      - request
      - response
      - duration
    properties:
      decision:
        $ref: "#/definitions/services.authz.decision.Decision"
      duration:
        type: integer
        format: int64
      request:
        $ref: "#/definitions/activity.v1.RequestData"
      response:
        $ref: "#/definitions/activity.v1.ResponseData"
  activity.v1.ActivityPostRequest:
    properties:
      class_type:
        description: audit or activity
        type: string
      count:
        description: "max count of records to return: max(4096)"
        type: integer
        format: int32
        default: 256
      end_time:
        description: filter time range end_time
        type: string
        format: date-time
      forward:
        description: search from start(true) or end(false) of table
        type: boolean
        default: false
      request_id:
        description: filter on matching request_id
        type: string
      start_time:
        description: filter time range start_time
        type: string
        format: date-time
  activity.v1.ActivityPostResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/activity.v1.ActivityResult"
  activity.v1.ActivityResult:
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/activity.v1.ActivityData"
  activity.v1.RequestData:
    required:
      - tenant
      - id
      - host
      - method
      - path
      - timestamp
    properties:
      body:
        type: string
      errors:
        $ref: "#/definitions/activity.v1.RequestErrors"
      host:
        type: string
      id:
        type: string
      method:
        type: string
      path:
        type: string
      request_body:
        type: string
      requested_by:
        type: string
      requested_through:
        type: string
      tenant:
        type: string
      timestamp:
        type: string
        format: date-time
  activity.v1.RequestErrors:
    properties:
      evaluation:
        type: string
  activity.v1.ResponseData:
    required:
      - timestamp
      - status_code
    properties:
      body:
        type: string
      errors:
        $ref: "#/definitions/activity.v1.ResponseErrors"
      status_code:
        type: integer
        format: int32
      timestamp:
        type: string
        format: date-time
  activity.v1.ResponseErrors:
    properties:
      processing:
        type: string
  analysis.v1.DecisionResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/analysis.v1.ElasticSearchDecision"
  analysis.v1.DecisionSearchResult:
    required:
      - items
    properties:
      cursor:
        type: string
      items:
        type: array
        items:
          $ref: "#/definitions/analysis.v1.ElasticSearchDecision"
  analysis.v1.DecisionsGetRequest:
    required:
      - cursor
      - start_time
      - end_time
      - search
      - system
      - stack
      - limit
      - result_kind
      - order
      - default_timezone
      - compact
    properties:
      compact:
        description: return only essential decision fields
        type: boolean
      cursor:
        description: continue from cursor position of previous query
        type: string
      default_timezone:
        description: client time zone offset. Local time expressions in query are
          adjusted with this offset
        type: string
      end_time:
        description: maximum decision time
        type: string
        format: date-time
      limit:
        description: maximum number of decisions to return
        type: integer
        format: int64
      order:
        description: ASC, DESC
        type: string
        default: DESC
      result_kind:
        description: comma-separated list of ALL, UNKNOWN, ADVICE, ALLOWED, DENIED, ERROR
        type: string
      search:
        description: search query
        type: string
      stack:
        description: stack ID
        type: string
      start_time:
        description: minimum decision time
        type: string
        format: date-time
      system:
        description: system ID
        type: string
  analysis.v1.DecisionsResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/analysis.v1.DecisionSearchResult"
  analysis.v1.ElasticSearchDecision:
    required:
      - Decision
    properties:
      Decision:
        type: string
      processed:
        type: string
        format: date-time
  analysis.v1.LogEntry:
    properties:
      bundles:
        description: configured bundles
        type: object
        additionalProperties:
          $ref: "#/definitions/logs.BundleInfoV1"
      decision_id:
        description: unique decision ID
        type: string
      erased:
        description: erased fields
        type: array
        items:
          type: string
      error:
        description: error information for failed decisions
        $ref: "#/definitions/analysis.v1.LogEntry.error"
      input:
        description: rego inputs
        $ref: "#/definitions/analysis.v1.LogEntry.input"
      labels:
        description: OPA labels
        type: object
        additionalProperties:
          type: string
      metrics:
        description: decision metrics
        type: object
      path:
        description: evaluated path
        type: string
      query:
        description: ad-hoc query
        type: string
      requested_by:
        description: requested by IP:port
        type: string
      result:
        description: evaluation result
        $ref: "#/definitions/analysis.v1.LogEntry.result"
      revision:
        description: bundle revision
        type: string
      timestamp:
        description: OPA-side decision timestamp
        type: string
        format: date-time
  analysis.v1.LogEntry.error: {}
  analysis.v1.LogEntry.input: {}
  analysis.v1.LogEntry.result: {}
  ast.Expr:
    required:
      - terms
      - index
    properties:
      generated:
        type: boolean
      index:
        type: integer
        format: int32
      negated:
        type: boolean
      terms:
        $ref: "#/definitions/ast.Expr.terms"
      with:
        type: array
        items:
          $ref: "#/definitions/ast.With"
  ast.Expr.terms: {}
  ast.With:
    required:
      - target
      - value
    properties:
      target:
        type: string
      value:
        type: string
  authz.v1.CheckPermissionInput:
    required:
      - check_option
      - operation
      - action
      - path
      - body
    properties:
      action:
        type: string
      body:
        type: object
      check_option:
        type: string
      operation:
        type: string
      path:
        type: string
  authz.v1.CheckPermissionOutput:
    required:
      - check_option
      - operation
      - path
      - allowed
      - eval_error
    properties:
      allowed:
        type: boolean
      body:
        type: object
      check_option:
        type: string
      eval_error:
        type: boolean
      operation:
        type: string
      path:
        type: string
  authz.v1.CheckPermissionsPostResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: array
        items:
          $ref: "#/definitions/authz.v1.CheckPermissionOutput"
  authz.v1.RoleBindingConfig:
    required:
      - id
      - description
      - subjects
      - role_name
      - metadata
    properties:
      description:
        type: string
      id:
        type: string
      metadata:
        $ref: "#/definitions/meta.v1.ObjectMeta"
      role_name:
        type: string
      subjects:
        type: array
        items:
          type: string
  authz.v1.RoleBindingParameters:
    required:
      - id
      - description
      - subjects
      - role_name
    properties:
      description:
        type: string
      id:
        type: string
      role_name:
        type: string
      subjects:
        type: array
        items:
          type: string
  authz.v1.RoleBindingsDeleteResponse:
    properties:
      request_id:
        type: string
  authz.v1.RoleBindingsGetResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/authz.v1.RoleBindingConfig"
  authz.v1.RoleBindingsListAllResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: object
        additionalProperties:
          $ref: "#/definitions/authz.v1.RoleBindingsListAllResponse.result"
  authz.v1.RoleBindingsListAllResponse.result:
    type: object
    additionalProperties:
      type: array
      items:
        $ref: "#/definitions/authz.v1.RoleBindingConfig"
  authz.v1.RoleBindingsListResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: array
        items:
          $ref: "#/definitions/authz.v1.RoleBindingConfig"
  authz.v1.RoleBindingsPutRequest:
    required:
      - id
      - description
      - subjects
      - role_name
    properties:
      description:
        type: string
      id:
        type: string
      role_name:
        type: string
      subjects:
        type: array
        items:
          type: string
  authz.v1.RoleBindingsPutResponse:
    properties:
      request_id:
        type: string
  authz.v1.RoleConfig:
    required:
      - name
    properties:
      name:
        type: string
  authz.v1.RolesListResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: array
        items:
          $ref: "#/definitions/authz.v1.RoleConfig"
  authz.v2.ClaimConfig:
    required:
      - identity_provider
      - key
      - value
    properties:
      identity_provider:
        type: string
      key:
        type: string
      value:
        type: string
  authz.v2.ResourceFilter:
    required:
      - kind
      - id
    properties:
      id:
        type: string
      kind:
        type: string
  authz.v2.RoleBindingConfig:
    required:
      - resource_filter
      - role_id
      - subjects
      - id
      - metadata
    properties:
      id:
        type: string
      metadata:
        $ref: "#/definitions/meta.v1.ObjectMeta"
      resource_filter:
        $ref: "#/definitions/authz.v2.ResourceFilter"
      role_id:
        type: string
      subjects:
        type: array
        items:
          $ref: "#/definitions/authz.v2.Subject"
  authz.v2.RoleBindingParameters:
    required:
      - resource_filter
      - role_id
      - subjects
    properties:
      resource_filter:
        $ref: "#/definitions/authz.v2.ResourceFilter"
      role_id:
        type: string
      subjects:
        type: array
        items:
          $ref: "#/definitions/authz.v2.Subject"
  authz.v2.RoleBindingsDeleteResponse:
    properties:
      request_id:
        type: string
  authz.v2.RoleBindingsDeleteSubjectsRequest:
    required:
      - subjects
    properties:
      subjects:
        type: array
        items:
          $ref: "#/definitions/authz.v2.Subject"
  authz.v2.RoleBindingsDeleteSubjectsResponse:
    required:
      - rolebinding
    properties:
      request_id:
        type: string
      rolebinding:
        $ref: "#/definitions/authz.v2.RoleBindingConfig"
  authz.v2.RoleBindingsGetResponse:
    required:
      - rolebinding
    properties:
      request_id:
        type: string
      rolebinding:
        $ref: "#/definitions/authz.v2.RoleBindingConfig"
  authz.v2.RoleBindingsListResponse:
    required:
      - rolebindings
    properties:
      request_id:
        type: string
      rolebindings:
        type: array
        items:
          $ref: "#/definitions/authz.v2.RoleBindingConfig"
  authz.v2.RoleBindingsPostRequest:
    required:
      - resource_filter
      - role_id
      - subjects
      - id
    properties:
      id:
        type: string
      resource_filter:
        $ref: "#/definitions/authz.v2.ResourceFilter"
      role_id:
        type: string
      subjects:
        type: array
        items:
          $ref: "#/definitions/authz.v2.Subject"
  authz.v2.RoleBindingsPostResponse:
    required:
      - rolebinding
    properties:
      request_id:
        type: string
      rolebinding:
        $ref: "#/definitions/authz.v2.RoleBindingConfig"
  authz.v2.RoleBindingsPostSubjectsRequest:
    required:
      - subjects
    properties:
      subjects:
        type: array
        items:
          $ref: "#/definitions/authz.v2.Subject"
  authz.v2.RoleBindingsPostSubjectsResponse:
    required:
      - rolebinding
    properties:
      request_id:
        type: string
      rolebinding:
        $ref: "#/definitions/authz.v2.RoleBindingConfig"
  authz.v2.RoleBindingsPutResetRequest: {}
  authz.v2.RoleBindingsPutResetResponse:
    properties:
      request_id:
        type: string
  authz.v2.RoleBindingsPutStatusRequest:
    required:
      - migrated
    properties:
      migrated:
        type: boolean
  authz.v2.RoleBindingsPutStatusResponse:
    properties:
      request_id:
        type: string
  authz.v2.RoleBindingsPutSubjectsRequest:
    required:
      - subjects
    properties:
      subjects:
        type: array
        items:
          $ref: "#/definitions/authz.v2.Subject"
  authz.v2.RoleBindingsPutSubjectsResponse:
    required:
      - rolebinding
    properties:
      request_id:
        type: string
      rolebinding:
        $ref: "#/definitions/authz.v2.RoleBindingConfig"
  authz.v2.RoleConfig:
    required:
      - resource_kind
      - id
      - metadata
    properties:
      id:
        type: string
      metadata:
        $ref: "#/definitions/meta.v1.ObjectMeta"
      resource_kind:
        type: string
  authz.v2.RoleParameters:
    required:
      - id
      - resource_kind
    properties:
      id:
        type: string
      resource_kind:
        type: string
  authz.v2.RolesListResponse:
    required:
      - roles
    properties:
      request_id:
        type: string
      roles:
        type: array
        items:
          $ref: "#/definitions/authz.v2.RoleConfig"
  authz.v2.Subject:
    required:
      - kind
      - id
    properties:
      claim_config:
        $ref: "#/definitions/authz.v2.ClaimConfig"
      id:
        type: string
      kind:
        type: string
  crypto.FilterTree:
    properties:
      digest:
        type: string
      nodes:
        type: object
        additionalProperties:
          $ref: "#/definitions/crypto.FilterTree"
  crypto.Signature:
    properties:
      excluded:
        $ref: "#/definitions/crypto.FilterTree"
      signatures:
        type: array
        items:
          $ref: "#/definitions/crypto.Signature.signatures"
  crypto.Signature.signatures:
    type: object
    additionalProperties:
      type: string
  data.v1.DataPatchResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/data.v1.DataPatchResponse.result"
  data.v1.DataPatchResponse.result: {}
  data.v1.DataPutResponse:
    properties:
      request_id:
        type: string
  data.v1.DataRequest:
    properties:
      input:
        type: object
      jsonpath:
        description: Json Path expression to extract portions of documents
        type: string
      mocks:
        description: Mocks http.send and opa.runtime builtins
        $ref: "#/definitions/systems.v1.BuiltinMocks"
      query_package:
        description: The package name to be used with query in case of multiple rego modules
        type: string
      rego:
        description: Rego query to be executed for the documents
        type: string
      rego_modules:
        description: List of rego modules to be loaded and executed for the documents
        type: object
        additionalProperties:
          type: string
  data.v1.DataResponse:
    required:
      - result
    properties:
      mocks:
        description: Mocks response
        $ref: "#/definitions/systems.v1.BuiltinMocksResponse"
      request_id:
        type: string
      result:
        $ref: "#/definitions/data.v1.DataResponse.result"
  data.v1.DataResponse.result: {}
  datasources.v1.Config:
    type: object
  datasources.v1.DatasourcesDeleteResponse:
    properties:
      request_id:
        type: string
  datasources.v1.DatasourcesGetResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: object
  datasources.v1.DatasourcesListResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: array
        items:
          $ref: "#/definitions/datasources.v1.Config"
  datasources.v1.DatasourcesPostResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/datasources.v1.DatasourcesPostResponse.result"
  datasources.v1.DatasourcesPostResponse.result: {}
  datasources.v1.DatasourcesPutRequest:
    type: object
  datasources.v1.DatasourcesPutResponse:
    properties:
      request_id:
        type: string
  git.v1.Commit:
    required:
      - author
      - email
      - message
      - files
      - files_to_delete
      - branch
    properties:
      author:
        type: string
      branch:
        type: string
      email:
        type: string
      files:
        description: Map of filenames to file contents
        type: object
        additionalProperties:
          type: string
      files_to_delete:
        description: List of filenames to delete from the repo
        type: array
        items:
          type: string
      message:
        type: string
  git.v1.CommitInput:
    required:
      - author
      - email
      - message
      - files
      - files_to_delete
    properties:
      author:
        type: string
      email:
        type: string
      files:
        description: Map of filenames to file contents
        type: object
        additionalProperties:
          type: string
      files_to_delete:
        description: List of filenames to delete from the repo
        type: array
        items:
          type: string
      message:
        type: string
  git.v1.DeleteBranchResponse:
    properties:
      request_id:
        type: string
  git.v1.GetFilesResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/git.v1.RepoFiles"
  git.v1.GitRepoConfig:
    required:
      - url
      - reference
      - credentials
      - path
    properties:
      credentials:
        description: Credentials are looked under the key <name>/<creds>
        type: string
      path:
        description: Path to limit the import to
        type: string
      reference:
        description: Remote reference, defaults to refs/heads/main
        type: string
      ssh_credentials:
        description: SSHCredentials including ssh private key and passphrase for
          ssh-based auth
        $ref: "#/definitions/git.v1.SSHCredentials"
      url:
        description: Repository URL
        type: string
  git.v1.PostCommitResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/git.v1.Commit"
  git.v1.RepoFiles:
    required:
      - files
    properties:
      deleted_files:
        type: array
        items:
          type: string
      files:
        type: object
        additionalProperties:
          type: string
  git.v1.SSHCredentials:
    required:
      - private_key
      - passphrase
    properties:
      passphrase:
        description: Passphrase is looked under the key passphrase/<pass>
        type: string
      private_key:
        description: PrivateKey is looked under the key private-key/<key>
        type: string
  git.v1.SourceControlConfig:
    required:
      - origin
    properties:
      origin:
        $ref: "#/definitions/git.v1.GitRepoConfig"
  git.v1.VerifiedRepoConfig:
    required:
      - reference
      - credentials
      - path
      - url
      - sha
    properties:
      credentials:
        description: Credentials are looked under the key <name>/<creds>
        type: string
      path:
        description: Path to limit the import to
        type: string
      reference:
        description: Remote reference, defaults to refs/heads/main
        type: string
      sha:
        type: string
      ssh_credentials:
        description: SSHCredentials including ssh private key and passphrase for
          ssh-based auth
        $ref: "#/definitions/git.v1.SSHCredentials"
      url:
        description: Repository URL
        type: string
  git.v1.VerifyConfigRequest:
    required:
      - id
      - reference
      - credentials
      - path
      - url
    properties:
      credentials:
        description: Credentials are looked under the key <name>/<creds>
        type: string
      id:
        description: id of the entity so that the config can be checked for duplicates
        type: string
      path:
        description: Path to limit the import to
        type: string
      reference:
        description: Remote reference, defaults to refs/heads/main
        type: string
      ssh_credentials:
        description: SSHCredentials including ssh private key and passphrase for
          ssh-based auth
        $ref: "#/definitions/git.v1.SSHCredentials"
      url:
        description: Repository URL
        type: string
  git.v1.VerifyConfigResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/git.v1.VerifiedRepoConfig"
  identity-providers.v1.ProviderConfig:
    required:
      - id
      - enabled
      - type
      - jit
      - allowed_domains
      - issuer_url
      - auth_url
      - token_url
      - user_info_url
      - proxy_url
      - client_id
      - client_secret
      - scopes
      - metadata
      - key_certificate
      - email_attribute
      - allow_idp_initiated
    properties:
      allow_idp_initiated:
        type: boolean
      allowed_domains:
        type: array
        items:
          type: string
      auth_url:
        type: string
      client_id:
        type: string
      client_secret:
        type: string
      email_attribute:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      issuer_url:
        type: string
      jit:
        type: boolean
      key_certificate:
        type: string
      metadata:
        type: string
      proxy_url:
        type: string
      scopes:
        type: array
        items:
          type: string
      token_url:
        type: string
      type:
        type: string
      user_info_url:
        type: string
  identity-providers.v1.ProvidersDeleteResponse:
    properties:
      request_id:
        type: string
  identity-providers.v1.ProvidersGetResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/identity-providers.v1.ProviderConfig"
  identity-providers.v1.ProvidersListResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: array
        items:
          $ref: "#/definitions/identity-providers.v1.ProviderConfig"
  identity-providers.v1.ProvidersPostRequest:
    required:
      - id
      - enabled
      - type
      - jit
      - allowed_domains
      - issuer_url
      - auth_url
      - token_url
      - user_info_url
      - proxy_url
      - client_id
      - client_secret
      - scopes
      - metadata
      - key_certificate
      - email_attribute
      - allow_idp_initiated
    properties:
      allow_idp_initiated:
        type: boolean
      allowed_domains:
        type: array
        items:
          type: string
      auth_url:
        type: string
      client_id:
        type: string
      client_secret:
        type: string
      email_attribute:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      issuer_url:
        type: string
      jit:
        type: boolean
      key_certificate:
        type: string
      metadata:
        type: string
      proxy_url:
        type: string
      scopes:
        type: array
        items:
          type: string
      token_url:
        type: string
      type:
        type: string
      user_info_url:
        type: string
  identity-providers.v1.ProvidersPostResponse:
    properties:
      request_id:
        type: string
  identity-providers.v1.ProvidersPutRequest:
    required:
      - id
      - enabled
      - type
      - jit
      - allowed_domains
      - issuer_url
      - auth_url
      - token_url
      - user_info_url
      - proxy_url
      - client_id
      - client_secret
      - scopes
      - metadata
      - key_certificate
      - email_attribute
      - allow_idp_initiated
    properties:
      allow_idp_initiated:
        type: boolean
      allowed_domains:
        type: array
        items:
          type: string
      auth_url:
        type: string
      client_id:
        type: string
      client_secret:
        type: string
      email_attribute:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      issuer_url:
        type: string
      jit:
        type: boolean
      key_certificate:
        type: string
      metadata:
        type: string
      proxy_url:
        type: string
      scopes:
        type: array
        items:
          type: string
      token_url:
        type: string
      type:
        type: string
      user_info_url:
        type: string
  identity-providers.v1.ProvidersPutResponse:
    properties:
      request_id:
        type: string
  invitations.v1.Invitation:
    required:
      - id
      - expiration
    properties:
      expiration:
        description: invitation expiration date/time
        type: string
        format: date-time
      id:
        description: invitation ID (user ID)
        type: string
  invitations.v1.InvitationResponse:
    required:
      - url
    properties:
      url:
        description: invitation URL
        type: string
  invitations.v1.InvitationsDeleteResponse:
    properties:
      request_id:
        type: string
  invitations.v1.InvitationsGetResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/invitations.v1.Invitation"
  invitations.v1.InvitationsListResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: array
        items:
          $ref: "#/definitions/invitations.v1.Invitation"
  invitations.v1.InvitationsPostRequest:
    required:
      - user_id
      - roles
    properties:
      roles:
        description: list of roles for the invited user
        type: array
        items:
          type: string
      user_id:
        description: user ID to create invitation for
        type: string
  invitations.v1.InvitationsPostResponse:
    properties:
      request_id:
        type: string
      result:
        description: result with URL is only returned when invitation was not send with
          e-mail
        $ref: "#/definitions/invitations.v1.InvitationResponse"
  invitations.v1.InvitationsPutRequest:
    required:
      - user_id
      - password
      - tos_checked
    properties:
      password:
        description: new user password
        type: string
      tos_checked:
        description: terms of service were accepted
        type: boolean
      user_id:
        description: new user ID
        type: string
  invitations.v1.InvitationsPutResponse:
    properties:
      request_id:
        type: string
  json.JsonPatchSpec:
    type: object
  location.Location:
    required:
      - file
      - row
      - col
    properties:
      col:
        type: integer
        format: int32
      file:
        type: string
      row:
        type: integer
        format: int32
  logreplay.v1.EntryReplayResult:
    properties:
      bundles:
        description: configured bundles
        type: object
        additionalProperties:
          $ref: "#/definitions/logs.BundleInfoV1"
      decision_id:
        description: unique decision ID
        type: string
      erased:
        description: erased fields
        type: array
        items:
          type: string
      error:
        description: evaluation error
        type: string
      input:
        description: rego inputs
        $ref: "#/definitions/analysis.v1.LogEntry.input"
      labels:
        description: OPA labels
        type: object
        additionalProperties:
          type: string
      metrics:
        description: decision metrics
        type: object
      new_result:
        description: new decision result
        $ref: "#/definitions/logreplay.v1.EntryReplayResult.new_result"
      path:
        description: evaluated path
        type: string
      query:
        description: ad-hoc query
        type: string
      requested_by:
        description: requested by IP:port
        type: string
      result:
        description: evaluation result
        $ref: "#/definitions/analysis.v1.LogEntry.result"
      revision:
        description: bundle revision
        type: string
      timestamp:
        description: OPA-side decision timestamp
        type: string
        format: date-time
  logreplay.v1.EntryReplayResult.new_result: {}
  logreplay.v1.ReplayAnalyzerStats:
    required:
      - batches_observed
      - batches_analyzed
      - entries_observed
      - entries_evaluated
      - entries_scheduled
      - entries_failed
      - analysis_errors
      - results_changed
    properties:
      analysis_errors:
        description: number of invalid decisions that could not be replayed (<=
          entries_evaluated)
        type: integer
        format: int64
      batches_analyzed:
        description: number of fully analyzed decision batches (<= batches_observed)
        type: integer
        format: int64
      batches_observed:
        description: number of decision batches picked by the analyzers (<=
          batches_downloaded)
        type: integer
        format: int64
      entries_evaluated:
        description: number of replayed decisions (<= entries_scheduled)
        type: integer
        format: int64
      entries_failed:
        description: number of decisions evaluated to error (<= entries_evaluated)
        type: integer
        format: int64
      entries_observed:
        description: number of decisions in batches_observed batches
        type: integer
        format: int64
      entries_scheduled:
        description: number of decisions scheduled for replay (<= entries_observed)
        type: integer
        format: int64
      results_changed:
        description: number of observed decision changes (<= entries_evaluated)
        type: integer
        format: int64
  logreplay.v1.ReplayRequest:
    properties:
      compare_full_results:
        description: do not compare decisions by system-type-dependent significant fields
        type: boolean
        default: false
      data_patches:
        description: list of JSON Patches to apply to the data namespace
        type: array
        items:
          $ref: "#/definitions/json.JsonPatchSpec"
      decision_patches:
        description: list of JSON Patches to apply to the decisions before they evaluated
        type: array
        items:
          $ref: "#/definitions/json.JsonPatchSpec"
      deterministic_policies:
        description: signals that decisions having the same inputs, data and revision
          always evaluate to the same result and therefore can be cached
        type: boolean
        default: true
      duration:
        description: maximum replay duration (e.g. "20s")
        type: string
      max_samples:
        description: maximum number of samples to return
        type: integer
        format: int32
      mocks:
        description: mock http.send and opa.runtime builtins
        $ref: "#/definitions/systems.v1.BuiltinMocks"
      policies:
        description: modified rego policies (path => rego content)
        type: object
        additionalProperties:
          type: string
      scope:
        description: list of scopes to narrow the decision search
        type: array
        items:
          $ref: "#/definitions/logreplay.v1.ReplayScope"
      skip_batches:
        description: list of batch IDs to skip
        type: array
        items:
          type: string
  logreplay.v1.ReplayResult:
    required:
      - started
      - samples
      - stats
      - duration
      - analyzed_batches
    properties:
      analyzed_batches:
        description: analyzed decision batches IDs to be used for skip_batches in
          subsequent requests
        type: array
        items:
          type: string
      duration:
        description: replay duration
        type: integer
        format: int64
      samples:
        description: representative change samples
        type: array
        items:
          $ref: "#/definitions/logreplay.v1.EntryReplayResult"
      started:
        description: replay start time
        type: string
        format: date-time
      stats:
        description: replay statistics
        $ref: "#/definitions/logreplay.v1.ReplayStats"
  logreplay.v1.ReplayScope:
    properties:
      max_age:
        description: maximum decision age (either in relative duration or in absolute
          time string)
        type: string
      max_revisions:
        description: maximum number of revisions to analyze back from the latest revision
        type: integer
        format: int64
        default: 1
      min_age:
        description: minimum decision age (either in relative duration or in absolute
          time string)
        type: string
      path:
        description: decision path must overlap with this one (can be subpath of the
          decision path to compare portion of the result)
        type: string
  logreplay.v1.ReplayStats:
    required:
      - batches_analyzed
      - entries_observed
      - entries_evaluated
      - entries_scheduled
      - entries_failed
      - analysis_errors
      - results_changed
      - batches_observed
      - batches_downloaded
      - batches_download_errors
      - batches_from_cache
      - batches_scheduled
      - batches_skipped
    properties:
      analysis_errors:
        description: number of invalid decisions that could not be replayed (<=
          entries_evaluated)
        type: integer
        format: int64
      batches_analyzed:
        description: number of fully analyzed decision batches (<= batches_observed)
        type: integer
        format: int64
      batches_download_errors:
        description: number of decision batches that could not be downloaded
        type: integer
        format: int64
      batches_downloaded:
        description: number of downloaded decision batches (<= batches_scheduled)
        type: integer
        format: int64
      batches_from_cache:
        description: number of downloaded decision batches taken from the cache (<=
          batches_downloaded)
        type: integer
        format: int64
      batches_observed:
        description: number of decision batches picked by the analyzers (<=
          batches_downloaded)
        type: integer
        format: int64
      batches_scheduled:
        description: number of decision batches scheduled for download
        type: integer
        format: int64
      batches_skipped:
        description: number of decision batches skipped due to the skip_batches input or
          pre-filtration (timestamp range, system/stack IDs)
        type: integer
        format: int64
      entries_evaluated:
        description: number of replayed decisions (<= entries_scheduled)
        type: integer
        format: int64
      entries_failed:
        description: number of decisions evaluated to error (<= entries_evaluated)
        type: integer
        format: int64
      entries_observed:
        description: number of decisions in batches_observed batches
        type: integer
        format: int64
      entries_scheduled:
        description: number of decisions scheduled for replay (<= entries_observed)
        type: integer
        format: int64
      results_changed:
        description: number of observed decision changes (<= entries_evaluated)
        type: integer
        format: int64
  logs.BundleInfoV1:
    properties:
      revision:
        type: string
  logs.v1.PostDecisionsResponse:
    properties:
      request_id:
        type: string
  meta.v1.ErrorResponse:
    required:
      - code
      - message
      - errors
    properties:
      code:
        type: string
      errors:
        type: array
        items:
          type: string
      message:
        type: string
      request_id:
        type: string
  meta.v1.ObjectMeta:
    properties:
      created_at:
        type: string
        format: date-time
      created_by:
        type: string
      created_through:
        type: string
      last_modified_at:
        type: string
        format: date-time
      last_modified_by:
        type: string
      last_modified_through:
        type: string
  meta.v1.RequestObject:
    type: object
  meta.v1.ResponseHeader:
    properties:
      request_id:
        type: string
  meta.v1.Status:
    required:
      - code
      - message
      - timestamp
    properties:
      code:
        type: string
      message:
        type: string
      timestamp:
        type: string
        format: date-time
  meta.v2.ObjectMeta:
    properties:
      created_at:
        type: string
        format: date-time
      created_by:
        type: string
      created_through:
        type: string
      last_modified_at:
        type: string
        format: date-time
      last_modified_by:
        type: string
      last_modified_through:
        type: string
  notifications.v1.NotificationInstallNewStateResponse:
    properties:
      request_id:
        type: string
  notifications.v1.NotificationIntegrationResponse:
    properties:
      request_id:
        type: string
      response_url:
        type: string
  notifications.v1.NotificationToolDeleteResponse:
    properties:
      request_id:
        type: string
  notifications.v1.NotificationToolResult:
    properties:
      installed:
        type: boolean
      type:
        type: string
  notifications.v1.NotificationToolStatusResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/notifications.v1.NotificationToolResult"
  notifications.v1.NotificationToolTokenRequest:
    required:
      - token
    properties:
      token:
        type: string
  notifications.v1.NotificationToolTokenResponse:
    properties:
      request_id:
        type: string
  policies.v1.PoliciesBulkUploadResponse:
    properties:
      request_id:
        type: string
  policies.v1.PoliciesListResponse:
    required:
      - result
    properties:
      metadata:
        type: array
        items:
          $ref: "#/definitions/meta.v1.ObjectMeta"
      request_id:
        type: string
      result:
        $ref: "#/definitions/policies.v1.PoliciesListResponse.result"
  policies.v1.PoliciesListResponse.result: {}
  policies.v1.PoliciesPutRequest:
    required:
      - modules
      - signature
    properties:
      modules:
        type: object
        additionalProperties:
          type: string
      signature:
        $ref: "#/definitions/crypto.Signature"
  policies.v1.PolicyDeleteResponse:
    properties:
      request_id:
        type: string
  policies.v1.PolicyGetResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/policies.v1.PolicyGetResponse.result"
  policies.v1.PolicyGetResponse.result: {}
  policies.v1.PolicyPutResponse:
    properties:
      request_id:
        type: string
  policies.v1.RuleCounts:
    required:
      - total
      - allow
      - deny
      - enforce
      - monitor
      - ignore
      - notify
      - test
      - other
    properties:
      allow:
        description: number of allow rules
        type: integer
        format: int32
      deny:
        description: number of deny rules
        type: integer
        format: int32
      enforce:
        description: number of enforce rules
        type: integer
        format: int32
      ignore:
        description: number of ignore rules
        type: integer
        format: int32
      monitor:
        description: number of monitor rules
        type: integer
        format: int32
      notify:
        description: number of notify rules
        type: integer
        format: int32
      other:
        description: number of unclassified rules
        type: integer
        format: int32
      test:
        description: number of test rules
        type: integer
        format: int32
      total:
        description: total number of rules
        type: integer
        format: int32
  policies.v2.MultiVersionFileInfo:
    properties:
      draft:
        type: object
        additionalProperties:
          $ref: "#/definitions/policies.v2.PolicyFileInfo"
      published:
        $ref: "#/definitions/policies.v2.PolicyFileInfo"
      review:
        type: object
        additionalProperties:
          $ref: "#/definitions/policies.v2.PolicyFileInfo"
      stash:
        type: object
        additionalProperties:
          $ref: "#/definitions/policies.v2.PolicyFileInfo"
  policies.v2.MultiVersionPackageInfo:
    properties:
      draft:
        type: object
        additionalProperties:
          $ref: "#/definitions/policies.v2.PackageInfo"
      protected:
        $ref: "#/definitions/policies.v2.PackageInfo"
      published:
        $ref: "#/definitions/policies.v2.PackageInfo"
      review:
        type: object
        additionalProperties:
          $ref: "#/definitions/policies.v2.PackageInfo"
      stash:
        type: object
        additionalProperties:
          $ref: "#/definitions/policies.v2.PackageInfo"
  policies.v2.PackageInfo:
    properties:
      metadata:
        type: object
        additionalProperties:
          $ref: "#/definitions/policies.v2.RuleMetadata"
      modules:
        type: object
        additionalProperties:
          $ref: "#/definitions/policies.v2.RegoMetadata"
      rules:
        type: object
        additionalProperties:
          $ref: "#/definitions/policies.v2.RegoMetadataSet"
  policies.v2.PoliciesGetResponse:
    required:
      - policies
    properties:
      policies:
        type: object
        additionalProperties:
          $ref: "#/definitions/policies.v2.PoliciesUnderRoot"
      request_id:
        type: string
  policies.v2.PoliciesPostRequest:
    required:
      - type
      - context
      - message
      - payload
    properties:
      context:
        type: string
      message:
        type: string
      payload:
        type: object
        additionalProperties:
          $ref: "#/definitions/policies.v2.PolicyFile"
      type:
        type: string
  policies.v2.PoliciesPostResponse:
    properties:
      request_id:
        type: string
  policies.v2.PoliciesPutRequest:
    required:
      - type
      - context
      - message
      - files
      - to
      - copy
    properties:
      context:
        type: string
      copy:
        type: boolean
      files:
        type: object
        additionalProperties:
          type: string
      message:
        type: string
      to:
        $ref: "#/definitions/policies.v2.PolicyOverlayID"
      type:
        type: string
  policies.v2.PoliciesPutResponse:
    properties:
      request_id:
        type: string
  policies.v2.PoliciesUnderRoot:
    properties:
      files:
        type: object
        additionalProperties:
          $ref: "#/definitions/policies.v2.MultiVersionFileInfo"
      namespace:
        type: object
        additionalProperties:
          $ref: "#/definitions/policies.v2.MultiVersionPackageInfo"
  policies.v2.PolicyFile:
    properties:
      content:
        type: string
      labels:
        type: object
        additionalProperties:
          type: string
      revision:
        type: string
  policies.v2.PolicyFileInfo:
    properties:
      content:
        type: string
      labels:
        type: object
        additionalProperties:
          type: string
      metadata:
        $ref: "#/definitions/meta.v2.ObjectMeta"
      revision:
        type: string
  policies.v2.PolicyOverlayID:
    required:
      - type
      - context
    properties:
      context:
        type: string
      type:
        type: string
  policies.v2.RegoMetadata:
    properties:
      metadata:
        type: object
        additionalProperties:
          $ref: "#/definitions/policies.v2.RuleMetadata"
      rules:
        type: object
        additionalProperties:
          $ref: "#/definitions/policies.v2.RegoMetadataSet"
  policies.v2.RegoMetadataSet:
    type: object
    additionalProperties:
      $ref: "#/definitions/policies.v2.RuleMetadata"
  policies.v2.RuleMetadata:
    properties:
      error:
        type: string
      value:
        type: object
  relay.protocol.Client:
    properties:
      client_key:
        type: string
      remote_address:
        type: string
      version:
        type: string
  relay.protocol.ClientsResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: array
        items:
          $ref: "#/definitions/relay.protocol.Client"
  secrets.v1.Secret:
    required:
      - description
      - name
      - id
      - metadata
    properties:
      description:
        type: string
      id:
        type: string
      metadata:
        $ref: "#/definitions/meta.v1.ObjectMeta"
      name:
        type: string
  secrets.v1.SecretBase:
    required:
      - name
      - description
    properties:
      description:
        type: string
      name:
        type: string
  secrets.v1.SecretsDeleteResponse:
    properties:
      request_id:
        type: string
  secrets.v1.SecretsGetResponse:
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/secrets.v1.Secret"
  secrets.v1.SecretsListResponse:
    properties:
      request_id:
        type: string
      result:
        type: array
        items:
          $ref: "#/definitions/secrets.v1.Secret"
  secrets.v1.SecretsPutRequest:
    required:
      - name
      - description
      - secret
    properties:
      description:
        type: string
      name:
        type: string
      secret:
        type: string
  secrets.v1.SecretsPutResponse:
    properties:
      request_id:
        type: string
  services.authz.decision.Decision:
    required:
      - input
      - output
    properties:
      input:
        $ref: "#/definitions/services.authz.decision.Input"
      output:
        $ref: "#/definitions/services.authz.decision.Output"
  services.authz.decision.Input:
    required:
      - method
      - path
      - user
    properties:
      body:
        type: object
      method:
        type: string
      path:
        type: string
      user:
        type: string
      user_claims:
        type: object
  services.authz.decision.Output:
    required:
      - allow
      - status
    properties:
      allow:
        type: boolean
      status:
        $ref: "#/definitions/.status"
  stacks.v1.SourceControlConfig:
    required:
      - use_workspace_settings
    properties:
      origin:
        $ref: "#/definitions/git.v1.GitRepoConfig"
      stack_origin:
        $ref: "#/definitions/git.v1.GitRepoConfig"
      use_workspace_settings:
        type: boolean
  stacks.v1.StackConfig:
    required:
      - name
      - type
      - description
      - read_only
      - id
      - policies
      - metadata
      - status
    properties:
      authz:
        description: authorization config
        $ref: "#/definitions/systems.v1.AuthzConfig"
        readOnly: true
      datasources:
        description: datasources created for the stack
        type: array
        items:
          $ref: "#/definitions/systems.v1.DatasourceConfig"
        readOnly: true
      description:
        type: string
      id:
        type: string
      matching_systems:
        description: IDs of systems matching the stack
        type: array
        items:
          type: string
      metadata:
        $ref: "#/definitions/meta.v1.ObjectMeta"
      minimum_opa_version:
        description: minimum running OPA version for any of the matching systems
        type: string
      name:
        type: string
      policies:
        type: array
        items:
          $ref: "#/definitions/systems.v1.PolicyConfig"
      read_only:
        type: boolean
      source_control:
        $ref: "#/definitions/stacks.v1.SourceControlConfig"
      status:
        type: string
      type:
        type: string
      type_parameters:
        description: stack type parameter values (for template.* types)
        type: object
  stacks.v1.StackParameters:
    required:
      - name
      - type
      - description
      - read_only
    properties:
      description:
        type: string
      name:
        type: string
      read_only:
        type: boolean
      source_control:
        $ref: "#/definitions/stacks.v1.SourceControlConfig"
      type:
        type: string
      type_parameters:
        description: stack type parameter values (for template.* types)
        type: object
  stacks.v1.StacksComplianceRequest:
    properties:
      drafts:
        description: draft policies to be used for 'new' violations computation (path =>
          rego)
        type: object
        additionalProperties:
          type: string
      extended:
        description: run extended compliance validation that is specific for the
          system/stack type
        type: boolean
      filter:
        description: filter violations with this selector (dot.path => value)
        type: object
      group_by:
        description: group results by dot.path values (list of group levels with list of
          fields at each level)
        type: array
        items:
          $ref: "#/definitions/stacks.v1.StacksComplianceRequest.group_by"
      mocks:
        description: mock http.send and opa.runtime builtins
        $ref: "#/definitions/systems.v1.BuiltinMocks"
      mode:
        description: validation mode. One of (delta, all, delta-count, all-count)
        type: string
        default: delta
      policy_type:
        description: policy type to narrow the monitor policy search (e.g. validating,
          mutating). Default (empty string or missing) is to run all monitoring
          policies
        type: string
      sort:
        description: list of fields to sort by
        type: array
        items:
          $ref: "#/definitions/systems.v1.SortField"
  stacks.v1.StacksComplianceRequest.group_by:
    type: array
    items:
      type: string
  stacks.v1.StacksComplianceResponse:
    required:
      - result
    properties:
      mocks:
        description: Mock results
        $ref: "#/definitions/systems.v1.BuiltinMocksResponse"
      request_id:
        type: string
      result:
        type: object
        additionalProperties:
          $ref: "#/definitions/systems.v1.ComplianceValidation"
  stacks.v1.StacksDeleteResponse:
    properties:
      request_id:
        type: string
  stacks.v1.StacksGetResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/stacks.v1.StackConfig"
  stacks.v1.StacksListResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: array
        items:
          $ref: "#/definitions/stacks.v1.StackConfig"
  stacks.v1.StacksPostRequest:
    required:
      - name
      - type
      - description
      - read_only
    properties:
      description:
        type: string
      name:
        type: string
      read_only:
        type: boolean
      source_control:
        $ref: "#/definitions/stacks.v1.SourceControlConfig"
      type:
        type: string
      type_parameters:
        description: stack type parameter values (for template.* types)
        type: object
  stacks.v1.StacksPostResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/stacks.v1.StackConfig"
  stacks.v1.StacksPutRequest:
    required:
      - name
      - type
      - description
      - read_only
    properties:
      description:
        type: string
      name:
        type: string
      read_only:
        type: boolean
      source_control:
        $ref: "#/definitions/stacks.v1.SourceControlConfig"
      type:
        type: string
      type_parameters:
        description: stack type parameter values (for template.* types)
        type: object
  stacks.v1.StacksPutResponse:
    properties:
      request_id:
        type: string
  stacks.v1.StacksTestsRequest:
    properties:
      drafts:
        description: draft policies to be used for 'new' violations computation (path =>
          rego)
        type: object
        additionalProperties:
          type: string
      mode:
        description: validation mode. One of (delta, all, delta-count, all-count)
        type: string
        default: delta
      policy_type:
        description: policy type to narrow the monitor policy search (e.g. validating,
          mutating). Default (empty string or missing) is to run all monitoring
          policies
        type: string
  stacks.v1.StacksTestsResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: object
        additionalProperties:
          $ref: "#/definitions/systems.v1.UnitTestsValidation"
  status.v1.AgentStatus:
    type: object
  status.v1.DeleteAgentResponse:
    properties:
      request_id:
        type: string
  status.v1.StatusGetResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: object
        additionalProperties:
          $ref: "#/definitions/status.v1.AgentStatus"
  status.v1.StatusPostResponse:
    properties:
      request_id:
        type: string
  systems.v1.AWSCredentials:
    properties:
      access_keys:
        description: access key id and secret access key are looked under the key
          <name>/<access_keys>
        type: string
  systems.v1.AgentConfig:
    required:
      - id
    properties:
      id:
        description: agent ID
        type: string
      status:
        description: agent status
        type: object
        readOnly: true
  systems.v1.AgentErrors:
    required:
      - waiting
      - errors
    properties:
      errors:
        description: list of system errors
        type: array
        items:
          $ref: "#/definitions/meta.v1.Status"
      waiting:
        description: true if the the system is waiting for error to be resolved
        type: boolean
  systems.v1.AllowedMapping:
    required:
      - path
    properties:
      expected:
        description: expected value of the decision property
        $ref: "#/definitions/systems.v1.AllowedMapping.expected"
      negated:
        description: when set to true, decision is Allowed when the mapped property IS
          NOT equal to the expected value
        type: boolean
        default: false
      path:
        description: dot-separated decision property path
        type: string
  systems.v1.AllowedMapping.expected: {}
  systems.v1.AuthzConfig:
    properties:
      role_bindings:
        description: a list of role binding configs
        type: array
        items:
          $ref: "#/definitions/systems.v1.V1RoleBindingConfig"
        readOnly: true
  systems.v1.BuiltinMocks:
    properties:
      http.send:
        description: Mocks http.send results
        $ref: "#/definitions/systems.v1.MocksHttpSend"
      opa.runtime:
        description: Mocks opa.runtime result
        $ref: "#/definitions/systems.v1.MocksOPARuntime"
  systems.v1.BuiltinMocksResponse:
    properties:
      http.send:
        description: Mocks http.send hits and misses
        $ref: "#/definitions/systems.v1.MocksHttpSendResponse"
  systems.v1.Bundle:
    required:
      - id
      - version
      - size
      - active
      - created_at
      - revision
      - download_url
    properties:
      active:
        description: activation percentage
        type: integer
        format: int64
      created_at:
        description: when created
        type: string
        format: date-time
      download_url:
        description: URL to download the bundle
        type: string
      id:
        description: bundle ID
        type: string
      last_deployed_at:
        description: when deployed last, if ever
        type: string
        format: date-time
      minimum_opa_version:
        description: minimum OPA version required by the bundle if known
        type: string
      revision:
        description: bundle revision identifier
        type: string
      size:
        description: size in bytes
        type: integer
        format: int64
      version:
        description: bundle version
        type: integer
        format: int64
  systems.v1.BundleActivation:
    required:
      - id
      - version
      - revision
    properties:
      id:
        type: string
      revision:
        type: string
      version:
        type: integer
        format: int64
  systems.v1.BundleDeployStatus:
    required:
      - build_errors
    properties:
      build_errors:
        description: build errors (per bundle id) when building the latest bundle, if any
        type: object
        additionalProperties:
          type: string
      primary:
        description: primary bundle to activate
        $ref: "#/definitions/systems.v1.BundleActivation"
  systems.v1.BundleDetails:
    required:
      - version
      - revision
      - download_url
      - id
      - active
      - created_at
      - size
    properties:
      active:
        description: activation percentage
        type: integer
        format: int64
      created_at:
        description: when created
        type: string
        format: date-time
      download_url:
        description: URL to download the bundle
        type: string
      id:
        description: bundle ID
        type: string
      last_deployed_at:
        description: when deployed last, if ever
        type: string
        format: date-time
      minimum_opa_version:
        description: minimum OPA version required by the bundle if known
        type: string
      revision:
        description: bundle revision identifier
        type: string
      size:
        description: size in bytes
        type: integer
        format: int64
      version:
        description: bundle version
        type: integer
        format: int64
  systems.v1.BundleDistributionS3Config:
    required:
      - region
      - bucket
      - discovery_path
      - policy_path
    properties:
      access_keys:
        description: access key id and secret access key are looked under the key
          <name>/<access_keys>
        type: string
      bucket:
        description: bucket name
        type: string
      discovery_path:
        description: discovery bundle path
        type: string
      endpoint:
        description: AWS endpoint
        type: string
      opa_credentials:
        description: if provided, OPA uses this 'services[_].credentials.s3_signing'
          config to connect directly to S3 for bundle downloads
        $ref: "#/definitions/systems.v1.BundleDistributionS3Config.opa_credentials"
      policy_path:
        description: bundle path
        type: string
      region:
        description: AWS region
        type: string
  systems.v1.BundleDistributionS3Config.opa_credentials:
    properties:
      environment_credentials:
        $ref: "#/definitions/systems.v1.BundleDistributionS3Config.opa_credentials.envi\
          ronment_credentials"
      metadata_credentials:
        $ref: "#/definitions/systems.v1.BundleDistributionS3Config.opa_credentials.meta\
          data_credentials"
      web_identity_credentials:
        $ref: "#/definitions/systems.v1.BundleDistributionS3Config.opa_credentials.web_\
          identity_credentials"
  systems.v1.BundleDistributionS3Config.opa_credentials.environment_credentials:
    type: object
  systems.v1.BundleDistributionS3Config.opa_credentials.metadata_credentials:
    required:
      - aws_region
      - iam_role
    properties:
      aws_region:
        type: string
      iam_role:
        type: string
  systems.v1.BundleDistributionS3Config.opa_credentials.web_identity_credentials:
    required:
      - aws_region
      - session_name
    properties:
      aws_region:
        type: string
      session_name:
        type: string
  systems.v1.BundleRegistryConfig:
    properties:
      distribution_s3:
        description: configuration for external S3 bucket to use for bundle distribution
        $ref: "#/definitions/systems.v1.BundleDistributionS3Config"
      manual_deployment:
        description: manual deployment mode to prevent automatic deployment of new bundles
        type: boolean
      max_bundles:
        description: maximum number of all bundles to store
        type: integer
        format: int64
      max_deployed_bundles:
        description: maximum number of previously deployed bundles to store
        type: integer
        format: int64
  systems.v1.ColumnMapping:
    required:
      - key
      - path
    properties:
      key:
        description: column key (also the search key)
        type: string
      path:
        description: dot-separated decision property path
        type: string
      type:
        description: 'column type: one of "string", "boolean", "date", "integer", "float"'
        type: string
        default: string
  systems.v1.ComplianceParameters:
    properties:
      extended:
        description: run extended compliance validation that is specific for the
          system/stack type
        type: boolean
      policy_type:
        description: policy type to narrow the monitor policy search (e.g. validating,
          mutating). Default (empty string or missing) is to run all monitoring
          policies
        type: string
  systems.v1.ComplianceValidation:
    properties:
      all:
        type: array
        items:
          $ref: "#/definitions/systems.v1.ComplianceValidation.all"
      all_count:
        type: integer
        format: int32
      new:
        type: array
        items:
          $ref: "#/definitions/systems.v1.ComplianceValidation.new"
      new_count:
        type: integer
        format: int32
      resolved:
        type: array
        items:
          $ref: "#/definitions/systems.v1.ComplianceValidation.resolved"
      resolved_count:
        type: integer
        format: int32
      unchanged:
        type: array
        items:
          $ref: "#/definitions/systems.v1.ComplianceValidation.unchanged"
      unchanged_count:
        type: integer
        format: int32
  systems.v1.ComplianceValidation.all: {}
  systems.v1.ComplianceValidation.new: {}
  systems.v1.ComplianceValidation.resolved: {}
  systems.v1.ComplianceValidation.unchanged: {}
  systems.v1.DatasourceConfig:
    required:
      - id
      - category
    properties:
      category:
        description: datasource category
        type: string
      id:
        description: datasource ID
        type: string
      optional:
        description: optional datasources can be deleted without being recreated
          automatically
        type: boolean
      status:
        description: datasource status
        $ref: "#/definitions/meta.v1.Status"
  systems.v1.DeploymentCommand:
    required:
      - title
      - action
    properties:
      action:
        description: command text
        type: string
      title:
        description: command title
        type: string
  systems.v1.DeploymentInstruction:
    required:
      - category
      - commands
    properties:
      category:
        description: category/tool name
        type: string
      commands:
        description: commands
        type: array
        items:
          $ref: "#/definitions/systems.v1.DeploymentCommand"
  systems.v1.DeploymentInstructions:
    properties:
      install:
        description: installation instructions for various tools
        type: array
        items:
          $ref: "#/definitions/systems.v1.DeploymentInstruction"
        readOnly: true
      uninstall:
        description: uninstallation instructions for various tools
        type: array
        items:
          $ref: "#/definitions/systems.v1.DeploymentInstruction"
        readOnly: true
  systems.v1.EnforcementConfig:
    required:
      - enforced
      - type
    properties:
      enforced:
        description: true if the policy is enforced
        type: boolean
      type:
        description: enforcement type e.g. opa, test, mask
        type: string
  systems.v1.MocksHttpData:
    required:
      - url
      - method
      - result
    properties:
      method:
        description: request method
        type: string
      result:
        description: mock json result
        type: object
      url:
        description: request URL
        type: string
  systems.v1.MocksHttpResponse:
    required:
      - method
      - url
    properties:
      method:
        description: request method
        type: string
      url:
        description: request URL
        type: string
  systems.v1.MocksHttpSend:
    required:
      - data
    properties:
      data:
        description: mock http.send data
        type: array
        items:
          $ref: "#/definitions/systems.v1.MocksHttpData"
  systems.v1.MocksHttpSendResponse:
    properties:
      mocked:
        description: mock http.send response
        type: array
        items:
          $ref: "#/definitions/systems.v1.MocksHttpResponse"
      unmocked:
        description: mock http.send response
        type: array
        items:
          $ref: "#/definitions/systems.v1.MocksHttpResponse"
  systems.v1.MocksOPARuntime:
    required:
      - result
    properties:
      result:
        description: mock json result
        type: object
  systems.v1.Module:
    required:
      - name
      - read_only
    properties:
      name:
        description: module name
        type: string
      placeholder:
        description: module is a placeholder
        type: boolean
        default: false
        readOnly: true
      read_only:
        description: true if module is read-only
        type: boolean
      rules:
        description: module rule count
        $ref: "#/definitions/policies.v1.RuleCounts"
        readOnly: true
  systems.v1.PolicyConfig:
    required:
      - id
      - type
      - enforcement
    properties:
      created:
        description: policy on when to (re)generate the policy
        type: string
      enforcement:
        description: enforcement status of the policy
        $ref: "#/definitions/systems.v1.EnforcementConfig"
      id:
        description: policy ID (path)
        type: string
      modules:
        description: rego modules policy consists of
        type: array
        items:
          $ref: "#/definitions/systems.v1.Module"
      rules:
        description: rule count
        $ref: "#/definitions/policies.v1.RuleCounts"
      type:
        description: policy type e.g. validating/rules
        type: string
  systems.v1.ReasonMapping:
    required:
      - path
    properties:
      path:
        description: dot-separated decision property path
        type: string
  systems.v1.RuleDecisionMappings:
    properties:
      allowed:
        description: rules to determine decision type (allowed, denied)
        $ref: "#/definitions/systems.v1.AllowedMapping"
      columns:
        description: decision mappings for additional columns
        type: array
        items:
          $ref: "#/definitions/systems.v1.ColumnMapping"
      reason:
        description: decision mapping for the reason field
        $ref: "#/definitions/systems.v1.ReasonMapping"
  systems.v1.SortField:
    required:
      - field
    properties:
      descending:
        description: true to sort in descending order
        type: boolean
      field:
        description: dot.path field expression
        type: string
  systems.v1.SystemConfig:
    required:
      - type
      - name
      - id
      - policies
      - authz
      - metadata
      - status
    properties:
      authz:
        description: authorization config
        $ref: "#/definitions/systems.v1.AuthzConfig"
      bundle_registry:
        description: bundle registry configuration
        $ref: "#/definitions/systems.v1.BundleRegistryConfig"
      datasources:
        description: datasources created for the system
        type: array
        items:
          $ref: "#/definitions/systems.v1.DatasourceConfig"
        readOnly: true
      decision_mappings:
        description: location of key attributes and additional columns in the decisions
          grouped by policy entry point path
        type: object
        additionalProperties:
          $ref: "#/definitions/systems.v1.RuleDecisionMappings"
      deployment_parameters:
        description: configuration settings to be used by the system agents
        $ref: "#/definitions/systems.v1.SystemDeploymentParameters"
      description:
        description: description for the system
        type: string
      error_setting:
        description: 'error/warning configuration: one of "all", "errors", "none"'
        type: string
      errors:
        description: current deployment errors
        type: object
        additionalProperties:
          $ref: "#/definitions/systems.v1.AgentErrors"
        readOnly: true
      external_id:
        description: external system ID
        type: string
      id:
        description: system ID
        type: string
      install:
        description: installation instructions by installation method and asset type
          (deprecated)
        type: object
        additionalProperties:
          $ref: "#/definitions/systems.v1.SystemConfig.install"
        readOnly: true
      matching_stacks:
        description: IDs of stacks matching the system
        type: array
        items:
          type: string
      metadata:
        description: system object metadata
        $ref: "#/definitions/meta.v1.ObjectMeta"
      minimum_opa_version:
        description: minimum running OPA version for the systems
        type: string
      name:
        description: system name
        type: string
      policies:
        description: policies created for the system
        type: array
        items:
          $ref: "#/definitions/systems.v1.PolicyConfig"
      read_only:
        description: prevents users from modifying policies using Styra UIs
        type: boolean
        default: false
      source_control:
        description: source control system configuration
        $ref: "#/definitions/git.v1.SourceControlConfig"
      status:
        description: system status
        type: string
      tokens:
        description: tokens created for the system
        type: array
        items:
          $ref: "#/definitions/tokens.v1.Token"
        readOnly: true
      type:
        description: system type e.g. kubernetes
        type: string
      type_parameters:
        description: system type parameter values (for template.* types)
        type: object
      uninstall:
        description: uninstallation instructions by installation method (deprecated)
        type: object
        additionalProperties:
          type: string
        readOnly: true
      warnings:
        description: current deployment warnings
        type: object
        additionalProperties:
          type: array
          items:
            $ref: "#/definitions/meta.v1.Status"
        readOnly: true
  systems.v1.SystemConfig.install:
    type: object
    additionalProperties:
      type: string
  systems.v1.SystemDeploymentParameters:
    properties:
      deny_on_opa_fail:
        description: true to fail close
        type: boolean
        default: false
      enable_partial_eval:
        description: true to enable partial eval for the system's bundle'
        type: boolean
        default: false
      extra:
        description: extra deployment settings
        type: object
      http_proxy:
        description: HTTP proxy URL
        type: string
      https_proxy:
        description: HTTPS proxy URL
        type: string
      kubernetes_version:
        description: minimum Kubernetes version expected (where applicable)
        type: string
      namespace:
        description: Kubernetes namespace the system is deployed to
        type: string
      no_proxy:
        description: URLs that should be excluded from proxying
        type: string
      timeout_seconds:
        description: Kubernetes webhook timeout (where applicable)
        type: integer
        format: int32
      trusted_ca_certs:
        description: trusted CA certificates
        type: array
        items:
          type: string
      trusted_container_registry:
        description: trusted container registry
        type: string
  systems.v1.SystemParameters:
    required:
      - name
      - type
    properties:
      bundle_registry:
        description: bundle registry configuration
        $ref: "#/definitions/systems.v1.BundleRegistryConfig"
      decision_mappings:
        description: location of key attributes and additional columns in the decisions
          grouped by policy entry point path
        type: object
        additionalProperties:
          $ref: "#/definitions/systems.v1.RuleDecisionMappings"
      deployment_parameters:
        description: configuration settings to be used by the system agents
        $ref: "#/definitions/systems.v1.SystemDeploymentParameters"
      description:
        description: description for the system
        type: string
      error_setting:
        description: 'error/warning configuration: one of "all", "errors", "none"'
        type: string
      external_id:
        description: external system ID
        type: string
      name:
        description: system name
        type: string
      read_only:
        description: prevents users from modifying policies using Styra UIs
        type: boolean
        default: false
      source_control:
        description: source control system configuration
        $ref: "#/definitions/git.v1.SourceControlConfig"
      type:
        description: system type e.g. kubernetes
        type: string
      type_parameters:
        description: system type parameter values (for template.* types)
        type: object
  systems.v1.SystemsComplianceRequest:
    properties:
      drafts:
        description: draft policies to be used for 'new' violations computation (path =>
          rego)
        type: object
        additionalProperties:
          type: string
      extended:
        description: run extended compliance validation that is specific for the
          system/stack type
        type: boolean
      filter:
        description: filter violations with this selector (dot.path => value)
        type: object
      group_by:
        description: group results by dot.path values (list of group levels with list of
          fields at each level)
        type: array
        items:
          $ref: "#/definitions/systems.v1.SystemsComplianceRequest.group_by"
      mocks:
        description: mock http.send and opa.runtime builtins
        $ref: "#/definitions/systems.v1.BuiltinMocks"
      mode:
        description: validation mode. One of (delta, all, delta-count, all-count)
        type: string
        default: delta
      policy_type:
        description: policy type to narrow the monitor policy search (e.g. validating,
          mutating). Default (empty string or missing) is to run all monitoring
          policies
        type: string
      sort:
        description: list of fields to sort by
        type: array
        items:
          $ref: "#/definitions/systems.v1.SortField"
  systems.v1.SystemsComplianceRequest.group_by:
    type: array
    items:
      type: string
  systems.v1.SystemsComplianceResponse:
    required:
      - result
    properties:
      mocks:
        description: Mock results
        $ref: "#/definitions/systems.v1.BuiltinMocksResponse"
      request_id:
        type: string
      result:
        type: object
        additionalProperties:
          $ref: "#/definitions/systems.v1.ComplianceValidation"
  systems.v1.SystemsDeleteResponse:
    properties:
      request_id:
        type: string
  systems.v1.SystemsGetAgentsResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: array
        items:
          $ref: "#/definitions/systems.v1.AgentConfig"
  systems.v1.SystemsGetBundleDeployResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/systems.v1.BundleDeployStatus"
  systems.v1.SystemsGetBundleDetailsResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/systems.v1.BundleDetails"
  systems.v1.SystemsGetBundlesResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: array
        items:
          $ref: "#/definitions/systems.v1.Bundle"
  systems.v1.SystemsGetDefaultPoliciesResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: object
        additionalProperties:
          type: string
  systems.v1.SystemsGetDefaultPolicyResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: string
  systems.v1.SystemsGetInstructionsResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/systems.v1.DeploymentInstructions"
  systems.v1.SystemsGetResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/systems.v1.SystemConfig"
  systems.v1.SystemsListResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: array
        items:
          $ref: "#/definitions/systems.v1.SystemConfig"
  systems.v1.SystemsPostRequest:
    required:
      - name
      - type
    properties:
      bundle_registry:
        description: bundle registry configuration
        $ref: "#/definitions/systems.v1.BundleRegistryConfig"
      decision_mappings:
        description: location of key attributes and additional columns in the decisions
          grouped by policy entry point path
        type: object
        additionalProperties:
          $ref: "#/definitions/systems.v1.RuleDecisionMappings"
      deployment_parameters:
        description: configuration settings to be used by the system agents
        $ref: "#/definitions/systems.v1.SystemDeploymentParameters"
      description:
        description: description for the system
        type: string
      error_setting:
        description: 'error/warning configuration: one of "all", "errors", "none"'
        type: string
      external_id:
        description: external system ID
        type: string
      name:
        description: system name
        type: string
      read_only:
        description: prevents users from modifying policies using Styra UIs
        type: boolean
        default: false
      source_control:
        description: source control system configuration
        $ref: "#/definitions/git.v1.SourceControlConfig"
      type:
        description: system type e.g. kubernetes
        type: string
      type_parameters:
        description: system type parameter values (for template.* types)
        type: object
  systems.v1.SystemsPostResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/systems.v1.SystemConfig"
  systems.v1.SystemsPutBundleCompileRequest: {}
  systems.v1.SystemsPutBundleCompileResponse:
    required:
      - result
    properties:
      result:
        $ref: "#/definitions/systems.v1.BundleDetails"
  systems.v1.SystemsPutBundleDeployRequest:
    required:
      - primary
      - force
    properties:
      force:
        description: activate even if bundle is not compatible with running agents
        type: boolean
      primary:
        description: primary bundle to activate
        $ref: "#/definitions/systems.v1.BundleActivation"
  systems.v1.SystemsPutBundleDeployResponse:
    properties:
      request_id:
        type: string
  systems.v1.SystemsPutRequest:
    required:
      - name
      - type
    properties:
      bundle_registry:
        description: bundle registry configuration
        $ref: "#/definitions/systems.v1.BundleRegistryConfig"
      decision_mappings:
        description: location of key attributes and additional columns in the decisions
          grouped by policy entry point path
        type: object
        additionalProperties:
          $ref: "#/definitions/systems.v1.RuleDecisionMappings"
      deployment_parameters:
        description: configuration settings to be used by the system agents
        $ref: "#/definitions/systems.v1.SystemDeploymentParameters"
      description:
        description: description for the system
        type: string
      error_setting:
        description: 'error/warning configuration: one of "all", "errors", "none"'
        type: string
      external_id:
        description: external system ID
        type: string
      name:
        description: system name
        type: string
      read_only:
        description: prevents users from modifying policies using Styra UIs
        type: boolean
        default: false
      source_control:
        description: source control system configuration
        $ref: "#/definitions/git.v1.SourceControlConfig"
      type:
        description: system type e.g. kubernetes
        type: string
      type_parameters:
        description: system type parameter values (for template.* types)
        type: object
  systems.v1.SystemsPutResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/systems.v1.SystemConfig"
  systems.v1.SystemsSuggestedRulesResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: string
  systems.v1.SystemsTestsRequest:
    properties:
      drafts:
        description: draft policies to be used for 'new' violations computation (path =>
          rego)
        type: object
        additionalProperties:
          type: string
      mode:
        description: validation mode. One of (delta, all, delta-count, all-count)
        type: string
        default: delta
      policy_type:
        description: policy type to narrow the monitor policy search (e.g. validating,
          mutating). Default (empty string or missing) is to run all monitoring
          policies
        type: string
  systems.v1.SystemsTestsResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: object
        additionalProperties:
          $ref: "#/definitions/systems.v1.UnitTestsValidation"
  systems.v1.SystemsTranslateExternalIdsRequest:
    required:
      - external_ids
    properties:
      external_ids:
        type: array
        items:
          type: string
  systems.v1.SystemsTranslateExternalIdsResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: object
        additionalProperties:
          type: array
          items:
            type: string
  systems.v1.TesterResult:
    required:
      - location
      - package
      - name
      - fail
      - duration
    properties:
      duration:
        type: integer
        format: int64
      error:
        type: string
      fail:
        type: boolean
      failed_at:
        $ref: "#/definitions/ast.Expr"
      location:
        $ref: "#/definitions/location.Location"
      name:
        type: string
      package:
        type: string
      presence_changed:
        type: boolean
  systems.v1.UnitTestsValidation:
    properties:
      all:
        type: array
        items:
          $ref: "#/definitions/systems.v1.TesterResult"
      all_count:
        type: integer
        format: int32
      all_errors_count:
        type: integer
        format: int32
      all_failed_count:
        type: integer
        format: int32
      new:
        type: array
        items:
          $ref: "#/definitions/systems.v1.TesterResult"
      new_count:
        type: integer
        format: int32
      new_errors_count:
        type: integer
        format: int32
      new_failed_count:
        type: integer
        format: int32
      resolved:
        type: array
        items:
          $ref: "#/definitions/systems.v1.TesterResult"
      resolved_count:
        type: integer
        format: int32
      resolved_errors_count:
        type: integer
        format: int32
      resolved_failed_count:
        type: integer
        format: int32
      unchanged:
        type: array
        items:
          $ref: "#/definitions/systems.v1.TesterResult"
      unchanged_count:
        type: integer
        format: int32
      unchanged_errors_count:
        type: integer
        format: int32
      unchanged_failed_count:
        type: integer
        format: int32
  systems.v1.V1RoleBindingConfig:
    required:
      - id
      - role_name
    properties:
      id:
        description: role binding ID
        type: string
      role_name:
        description: role name
        type: string
  timeseries.v1.TimeSeriesData:
    required:
      - date
      - value
    properties:
      date:
        type: string
      value:
        type: integer
        format: int64
  timeseries.v1.TimeSeriesPostRequest:
    required:
      - stack
      - system
      - policy
      - resolution
      - data_kind
      - start_time
      - end_time
    properties:
      data_kind:
        type: string
      end_time:
        type: string
        format: date-time
      policy:
        type: string
      resolution:
        type: integer
        format: int64
      stack:
        type: string
      start_time:
        type: string
        format: date-time
      system:
        type: string
  timeseries.v1.TimeSeriesPostResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/timeseries.v1.TimeSeriesResult"
  timeseries.v1.TimeSeriesResult:
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/timeseries.v1.TimeSeriesData"
  timeseries.v1.TimeSeriesUsageData:
    required:
      - date
      - node_count
      - decision_rate
    properties:
      date:
        type: string
      decision_rate:
        type: integer
        format: int64
      node_count:
        type: integer
        format: int64
  timeseries.v1.TimeSeriesUsagePostRequest:
    required:
      - system
      - start_time
      - end_time
      - resolution
      - latest
    properties:
      end_time:
        type: string
        format: date-time
      latest:
        type: boolean
      resolution:
        type: integer
        format: int64
      start_time:
        type: string
        format: date-time
      system:
        type: string
  timeseries.v1.TimeSeriesUsagePostResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/timeseries.v1.TimeSeriesUsageResult"
  timeseries.v1.TimeSeriesUsageResult:
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/timeseries.v1.TimeSeriesUsageData"
  tokens.v1.Token:
    required:
      - id
      - description
      - ttl
      - allow_path_patterns
      - metadata
    properties:
      allow_path_patterns:
        type: array
        items:
          type: string
      description:
        type: string
      expires:
        type: string
        format: date-time
      id:
        type: string
      metadata:
        $ref: "#/definitions/meta.v1.ObjectMeta"
      token:
        type: string
      ttl:
        type: string
      uses:
        type: integer
        format: int64
  tokens.v1.TokensDeleteResponse:
    properties:
      request_id:
        type: string
  tokens.v1.TokensGetResponse:
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/tokens.v1.Token"
  tokens.v1.TokensListResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: array
        items:
          $ref: "#/definitions/tokens.v1.Token"
  tokens.v1.TokensPutRequest:
    required:
      - description
      - allow_path_patterns
      - regenerate
    properties:
      allow_path_patterns:
        type: array
        items:
          type: string
      description:
        type: string
      regenerate:
        type: boolean
      ttl:
        type: string
  tokens.v1.TokensPutResponse:
    properties:
      request_id:
        type: string
      result:
        type: string
  users.v1.ResourceRole:
    required:
      - resource_type
      - resource_id
      - role_name
    properties:
      resource_id:
        type: string
      resource_type:
        type: string
      role_name:
        type: string
  users.v1.User:
    required:
      - enabled
      - id
    properties:
      enabled:
        type: boolean
      id:
        type: string
      resource_roles:
        type: array
        items:
          $ref: "#/definitions/users.v1.ResourceRole"
      roles:
        type: array
        items:
          type: string
  users.v1.UserBase:
    required:
      - enabled
    properties:
      enabled:
        type: boolean
      roles:
        type: array
        items:
          type: string
  users.v1.UsersDeleteResponse:
    properties:
      request_id:
        type: string
  users.v1.UsersGetResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/users.v1.User"
  users.v1.UsersListResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        type: array
        items:
          $ref: "#/definitions/users.v1.User"
  users.v1.UsersPutRequest:
    required:
      - enabled
    properties:
      enabled:
        type: boolean
      old_password:
        type: string
      password:
        type: string
      roles:
        type: array
        items:
          type: string
  users.v1.UsersPutResponse:
    properties:
      request_id:
        type: string
  workspace.v1.ActivityExporterConfig:
    properties:
      interval:
        description: "S3 exporter interval: range [30s,1h]"
        type: string
        default: 5m
      kafka:
        $ref: "#/definitions/workspace.v1.KafkaConfig"
      s3_activity:
        $ref: "#/definitions/workspace.v1.S3Config"
  workspace.v1.DecisionExporterConfig:
    properties:
      interval:
        description: "S3 exporter interval: range [30s,1h]"
        type: string
        default: 30s
      kafka:
        $ref: "#/definitions/workspace.v1.KafkaConfig"
      s3_decisions:
        $ref: "#/definitions/workspace.v1.S3Config"
  workspace.v1.GetRegionResponse:
    required:
      - result
    properties:
      result:
        type: array
        items:
          $ref: "#/definitions/workspace.v1.RegionFF"
  workspace.v1.GithubConfiguration:
    required:
      - organizations
    properties:
      organizations:
        type: array
        items:
          type: string
  workspace.v1.KafkaConfig:
    required:
      - authentication
      - brokers
      - topic
      - required_acks
    properties:
      authentication:
        description: "Kafka authentication mechanism: OPEN, PLAINTEXT, SASL"
        type: string
      brokers:
        description: Kafka brokers
        type: array
        items:
          type: string
      compression:
        description: "Compression mechanism: GZIP, SNAPPY, LZ4, ZSTD"
        type: string
      idempotent:
        description: Enable Kafka idempotent exactly once reliablity semantics
        type: boolean
      max_message_size:
        description: Max message size
        type: integer
        format: int32
        default: 1000000
      max_retries:
        description: Max send retries
        type: integer
        format: int32
        default: 3
      plain:
        description: Kafka PlainText authentication
        $ref: "#/definitions/workspace.v1.KafkaPlain"
      required_acks:
        description: "Required acks: WaitForLocal, WaitForAll replica ack(s)"
        type: string
      sasl:
        description: Kafka SASL authentication
        $ref: "#/definitions/workspace.v1.KafkaSasl"
      timeout:
        description: Message timeout duration
        type: string
        default: 10s
      tls:
        description: Kafka TLS
        $ref: "#/definitions/workspace.v1.KafkaTls"
      topic:
        description: Kafka topic
        type: string
      version:
        description: "Kafka version: e.g. 2.0.0"
        type: string
  workspace.v1.KafkaPlain:
    properties:
      user:
        description: Authenticated Username/Password, stored in /v1/secrets/${user}
        type: string
  workspace.v1.KafkaSasl:
    required:
      - mechanism
      - version
    properties:
      mechanism:
        description: "SASL mechanism: PLAIN, SCRAM-SHA-256, SCRAM-SHA-512"
        type: string
      plain:
        description: Kafka SASL authentication
        $ref: "#/definitions/workspace.v1.KafkaPlain"
      version:
        description: SASL version defaults to 1 (set to 0 for Azure Event Hub)
        type: integer
        format: int32
        default: 1
  workspace.v1.KafkaTls:
    properties:
      client_cert:
        description: Optional client public/private certificate PEM, stored in
          /v1/secrets/${client_cert}
        type: string
      insecure_skip_verify:
        description: Skip server certificate chain and host verification
        type: boolean
      rootca:
        description: Trusted Root CA(s) PEM
        type: string
  workspace.v1.KafkaVerifyResponse:
    required:
      - kafka_code
      - kafka_message
    properties:
      kafka_code:
        type: string
      kafka_message:
        type: string
      request_id:
        type: string
  workspace.v1.MetricsExporterConfig:
    required:
      - targets
    properties:
      targets:
        type: array
        items:
          $ref: "#/definitions/workspace.v1.MetricsExporterTarget"
  workspace.v1.MetricsExporterTarget:
    required:
      - plugin
      - token_id
    properties:
      interval:
        description: Metrics polling interval range [30,3600] (seconds)
        type: integer
        format: int32
        default: 60
      plugin:
        description: Metrics output plugin name [datadog|signalfx]
        type: string
      realm:
        description: Plugin realm
        type: string
      token_id:
        description: Plugin bearer token reference id to secret stored in
          /v1/secrets/${token_id}
        type: string
      url:
        description: Plugin URL
        type: string
  workspace.v1.RegionFF:
    required:
      - description
      - title
      - value
    properties:
      description:
        type: string
      title:
        type: string
      value:
        type: string
  workspace.v1.S3Config:
    required:
      - url
      - region
      - access_keys
    properties:
      access_keys:
        description: Access key ID and secret access key are stored at
          /v1/secrets/${access_keys}
        type: string
      endpoint:
        description: "Custom endpoint or S3 compatible system endpoint (ie:
          https://storage.googleapis.com)"
        type: string
      region:
        description: "S3 Region (ie: us-east-1 or auto)"
        type: string
      url:
        description: "S3 Bucket URL (ie: s3://styra-storage or gs://styra-storage/folder)"
        type: string
  workspace.v1.S3ConfigGetResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/workspace.v1.DecisionExporterConfig"
  workspace.v1.S3ConfigPutRequest:
    properties:
      interval:
        description: "S3 exporter interval: range [30s,1h]"
        type: string
        default: 30s
      kafka:
        $ref: "#/definitions/workspace.v1.KafkaConfig"
      s3_decisions:
        $ref: "#/definitions/workspace.v1.S3Config"
  workspace.v1.S3VerifyResponse:
    required:
      - s3_code
      - s3_message
    properties:
      request_id:
        type: string
      s3_code:
        type: string
      s3_message:
        type: string
  workspace.v1.Status:
    required:
      - authz_migration
    properties:
      authz_migration:
        type: string
  workspace.v1.WorkspaceConfig:
    properties:
      activity_exporter:
        $ref: "#/definitions/workspace.v1.ActivityExporterConfig"
      decisions_exporter:
        $ref: "#/definitions/workspace.v1.DecisionExporterConfig"
      github:
        $ref: "#/definitions/workspace.v1.GithubConfiguration"
      metadata:
        $ref: "#/definitions/meta.v1.ObjectMeta"
      metrics_exporter:
        $ref: "#/definitions/workspace.v1.MetricsExporterConfig"
      source_control:
        $ref: "#/definitions/git.v1.SourceControlConfig"
      status:
        $ref: "#/definitions/workspace.v1.Status"
  workspace.v1.WorkspaceGetResponse:
    required:
      - result
    properties:
      request_id:
        type: string
      result:
        $ref: "#/definitions/workspace.v1.WorkspaceConfig"
  workspace.v1.WorkspaceParameters:
    properties:
      activity_exporter:
        $ref: "#/definitions/workspace.v1.ActivityExporterConfig"
      decisions_exporter:
        $ref: "#/definitions/workspace.v1.DecisionExporterConfig"
      github:
        $ref: "#/definitions/workspace.v1.GithubConfiguration"
      metrics_exporter:
        $ref: "#/definitions/workspace.v1.MetricsExporterConfig"
      source_control:
        $ref: "#/definitions/git.v1.SourceControlConfig"
  workspace.v1.WorkspacePutRequest:
    properties:
      activity_exporter:
        $ref: "#/definitions/workspace.v1.ActivityExporterConfig"
      decisions_exporter:
        $ref: "#/definitions/workspace.v1.DecisionExporterConfig"
      github:
        $ref: "#/definitions/workspace.v1.GithubConfiguration"
      metrics_exporter:
        $ref: "#/definitions/workspace.v1.MetricsExporterConfig"
      source_control:
        $ref: "#/definitions/git.v1.SourceControlConfig"
  workspace.v1.WorkspacePutResponse:
    properties:
      request_id:
        type: string
tags:
  - description: Activity log
    name: activity
  - description: Agent statuses API
    name: agents
  - description: Authz management
    name: authz
  - description: Policy Bundles
    name: bundles
  - description: Data read/write
    name: data
  - description: Data Sources Management
    name: datasources
  - description: analysis
    name: decisions
  - description: Identity Providers management
    name: identity-providers
  - description: User invitations
    name: invitations
  - description: >
      `log-replay` is a service that re-evaluates past decision logs in order to
      estimate what would change if one of the policies

      would be different. `log-replay` is used as an analysis tool to analyze the impact of a policy change.
    name: logreplay
  - description: OPA decision logs API
    name: logs
  - description: Notification Integration
    name: notifications
  - description: OpenAPI Specification
    name: openapi
  - description: Policy management
    name: policies
  - description: policies API v2
    name: policies
  - description: manages relay-clients
    name: relay-server
  - description: Secrets Management
    name: secrets
  - description: Stacks management
    name: stacks
  - description: OPA statuses API
    name: status
  - description: Systems management
    name: systems
  - description: Timeseries
    name: timeseries
  - description: API tokens management
    name: tokens
  - description: User management
    name: users
  - description: Workspace management
    name: workspace
externalDocs:
  description: Styra DAS Documentation
  url: https://docs.styra.com
securityDefinitions:
  basicAuth:
    type: basic
